const { EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } = require(`discord.js`)
const config = require(`../../config`)
const interactionError = require('../../Events/WebhookError/interactionError');
const pingStaff = require('../../schemas/pingstaffSchema');
var timeout = [];

module.exports = {
    id: 'Ticket_Modals_Help',
    description: `N√∫t h·ªó tr·ª£ ticket`,
    async execute(interaction, client) {
        try {

            const channelTopic = interaction.channel.topic;
            const ticketOwnerId = channelTopic?.match(/Ng∆∞·ªùi S·ª≠ d·ª•ng v√©: (\d+)/)?.[1];

            if (!ticketOwnerId || interaction.user.id !== ticketOwnerId) {
                return await interaction.reply({ content: `üö´ B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng n√∫t n√†y trong k√™nh v√© n√†y.`, ephemeral: true });
            }

            const data = await pingStaff.findOne({ Guild: interaction.guild.id });
            
            if (!data || !data.Roles || data.Roles.length === 0) {
                return await interaction.reply({ content: `H·ªá th·ªëng ping ch∆∞a ƒë∆∞·ª£c k√≠ch ho·∫°t.`, ephemeral: true });
            }
            
            // T√¨m vai tr√≤ ph√π h·ª£p ƒë·ªÉ ping
            const channelName = interaction.channel.name;
            const expectedRole = data.Roles.find(role => {
                if (channelName.startsWith('discord-') && role.ChannelType === 'discord-') {
                    return true;
                } else if (channelName.startsWith('game-') && role.ChannelType === 'game-') {
                    return true;
                }
                return false;
            });
            
            if (!expectedRole) {
                                
                // return await interaction.reply({ content: `Ch·ªâ √°p d·ª•ng v·ªõi k√™nh v√©.`, ephemeral: true });
                                
                // X√°c ƒë·ªãnh lo·∫°i k√™nh hi·ªán t·∫°i
                const channelType = channelName.startsWith('discord-') ? 'discord' : (channelName.startsWith('game-') ? 'game' : '');
            
                // Ki·ªÉm tra n·∫øu k√™nh kh√¥ng c√≥ ti·ªÅn t·ªë ph√π h·ª£p
                if (!channelType) {
                    return await interaction.reply({ 
                        content: `Vui l√≤ng s·ª≠ d·ª•ng l·ªánh n√†y trong k√™nh v√© \`discord-\` ho·∫∑c \`game-\`.`,
                        ephemeral: true 
                    });
                }
            
                // N·∫øu c√≥ ti·ªÅn t·ªë nh∆∞ng kh√¥ng t√¨m th·∫•y vai tr√≤
                return await interaction.reply({ 
                    content: `Vai tr√≤ cho lo·∫°i k√™nh v√© ${channelType} ch∆∞a ƒë∆∞·ª£c thi·∫øt l·∫≠p trong h·ªá th·ªëng ping. Vui l√≤ng thi·∫øt l·∫≠p vai tr√≤ t∆∞∆°ng ·ª©ng ƒë·ªÉ s·ª≠ d·ª•ng l·ªánh n√†y.`,
                    ephemeral: true 
                });
            }
            
            if (timeout.includes(interaction.user.id)) {
                return await interaction.reply({ content: `B·∫°n ƒëang trong th·ªùi gian h·ªìi chi√™u 1 ph√∫t cho l·ªánh n√†y! Th·ª≠ l·∫°i sau`, ephemeral: true });
            }
            
            const roleToPing = await interaction.guild.roles.fetch(expectedRole.RoleID);
            const membersToPing = interaction.guild.members.cache.filter(member => member.roles.cache.has(roleToPing.id))
                .filter(member => ['online', 'dnd', 'idle'].includes(member.presence?.status || ''));
            
            if (membersToPing.size === 0) {
                await interaction.reply({ content: `Kh√¥ng c√≥ ai tr·ª±c tuy·∫øn trong vai tr√≤ ${roleToPing}... Th·ª≠ l·∫°i sau`, ephemeral: true });
            } else {
                const memberList = membersToPing.map(member => member.toString()).join('\n+ ');
            
                const embed = new EmbedBuilder()
                        .setColor('Green')
                        .setDescription(`C√°c th√†nh vi√™n n√†y s·∫Ω h·ªó tr·ª£ b·∫°n! H√£y ki√™n nh·∫´n.`);
            
                await interaction.reply({ 
                        embeds: [embed], 
                        content: `\>\>\> **NH·ªÆNG NG∆Ø·ªúI ƒêANG ONL TRONG VAI TR√í <@&${roleToPing.id}> G·ªíM:**\n\n + ${memberList}\n\n`,
                        ephemeral: true
                    });

                // G·ª≠i tin nh·∫Øn ri√™ng ƒë·∫øn t·ª´ng th√†nh vi√™n
                membersToPing.forEach(async member => {
                try {
                        const dmEmbed = new EmbedBuilder()
                            .setColor('Yellow')
                            .setTitle('Y√™u c·∫ßu h·ªó tr·ª£')
                            .setDescription(
                                `Ng∆∞·ªùi d√πng **${interaction.user.displayName}** ƒëang c·∫ßn tr·ª£ gi√∫p. Vui l√≤ng ƒë·∫øn k√™nh ${interaction.channel} ƒë·ªÉ h·ªó tr·ª£ h·ªç.`
                            );
                                
                            await member.send({ embeds: [dmEmbed] });
                    } catch (error) {
                            console.error(`Kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn cho ${member.user.displayName}:`, error);
                    }
                });
            
                timeout.push(interaction.user.id);
                setTimeout(() => {
                    timeout.shift();
                }, 60000);
            }

        } catch (error) {
            interactionError.execute(interaction, error, client);
        }
    }
}