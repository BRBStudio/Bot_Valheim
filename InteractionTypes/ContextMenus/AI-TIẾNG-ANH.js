const { ApplicationCommandType, EmbedBuilder } = require('discord.js');
const translate = require('@iamtraction/google-translate');
const config = require(`../../config`)
const CommandStatus = require('../../schemas/Command_Status');

module.exports = {
    data: {
        name: 'AI TI·∫æNG ANH',
        type: ApplicationCommandType.Message,
    },
    async execute(interaction, msg) {
        if (!interaction.isMessageContextMenuCommand()) return;

        
        // Ki·ªÉm tra tr·∫°ng th√°i c·ªßa ng·ªØ c·∫£nh
        const commandStatus = await CommandStatus.findOne({ command: 'AI TI·∫æNG ANH' });

        // N·∫øu l·ªánh ƒëang t·∫Øt, g·ª≠i th√¥ng b√°o v√† kh√¥ng th·ª±c hi·ªán ng·ªØ c·∫£nh
        if (commandStatus && commandStatus.status === 'off') {
            return interaction.reply('·ª©ng d·ª•ng (apps) n√†y ƒë√£ b·ªã t·∫Øt, vui l√≤ng th·ª≠ l·∫°i sau.');
        }

        if (interaction.commandName === 'AI TI·∫æNG ANH') { // S·ª≠a ƒëi·ªÅu ki·ªán l·ªánh ƒë√∫ng
            
            //s·ª≠ d·ª•ng ƒë·ªÉ l·∫•y n·ªôi dung tin nh·∫Øn m√† ng∆∞·ªùi d√πng ƒë√£ ch·ªçn ƒë·ªÉ d·ªãch.
            const targetMessage = interaction.targetMessage;

            // Ki·ªÉm tra xem targetMessage c√≥ t·ªìn t·∫°i v√† c√≥ n·ªôi dung kh√¥ng \\ if (!targetMessage || !targetMessage.content || !/\w/.test(targetMessage.content))
            if (!targetMessage || !targetMessage.content.trim()) {
                return interaction.reply({ content: `üÜò ƒê√¢y kh√¥ng ph·∫£i ch·ªØ ho·∫∑c tin nh·∫Øn kh√¥ng c√≥ n·ªôi dung, vui l√≤ng ch·ªçn n·ªôi dung c√≥ tin nh·∫Øn b·∫±ng ch·ªØ ƒë·ªÉ s·ª≠ d·ª•ng AI.`, ephemeral: true });
            }

            // L·∫•y n·ªôi dung tin nh·∫Øn g·ªëc
            const content = targetMessage.content;

            try {
                // Ph√°t hi·ªán ng√¥n ng·ªØ g·ªëc c·ªßa tin nh·∫Øn
                const detection = await translate(content, { to: 'en' });
                const lang = detection.from.language.iso

                // N·∫øu ng√¥n ng·ªØ g·ªëc l√† ti·∫øng Anh, kh√¥ng c·∫ßn d·ªãch
                if (lang === 'en') {
                    return interaction.reply({ content: `Tin nh·∫Øn ƒë√£ l√† ti·∫øng Anh, kh√¥ng c·∫ßn d·ªãch.`, ephemeral: true });
                }

                // N·∫øu ng√¥n ng·ªØ kh√¥ng ph·∫£i ti·∫øng Anh, ti·∫øn h√†nh d·ªãch
                const translation = await translate(content, { to: 'en' });

                // T√≠nh to√°n gi·ªõi h·∫°n an to√†n cho c·∫£ hai embed
                const maxTotal = 6000;
                const titleAndExtras = 500; // Ph·∫ßn ti√™u ƒë·ªÅ, thumbnail, footer
                const available = maxTotal - titleAndExtras;
                const half = Math.floor(available / 2);

                const originalContent = content.length > half
                    ? content.slice(0, half - 3) + '...'
                    : content;

                const translatedContent = translation.text.length > half
                    ? translation.text.slice(0, half - 3) + '...'
                    : translation.text;

                const embedGocTA = new EmbedBuilder()
                    .setTitle(`Apps Bot Valheim\n\nTin nh·∫Øn g·ªëc:`)
                    .setColor(config.embedDarkOrange)
                    .setDescription(`\`\`\`yml\n${originalContent}\`\`\``) // ${content}
                    .setThumbnail(`https://i.imgur.com/dZsQfqP.gif`)
                    .setFooter({ text: `‚è∞` })
                    .setTimestamp();

                const embedDichTA = new EmbedBuilder()
                    .setTitle(`Apps Bot Valheim\n\nD·ªãch tin nh·∫Øn:`)
                    .setColor(config.embedDarkGreen)
                    .setDescription(`\`\`\`yml\n${translatedContent}\`\`\``) // ${translation.text}
                    .setThumbnail(`https://i.imgur.com/dZsQfqP.gif`)
                    .setFooter({ text: `‚è∞` })
                    .setTimestamp();

                // Hi·ªÉn th·ªã tin nh·∫Øn g·ªëc v√† tin nh·∫Øn d·ªãch
                interaction.reply({ embeds: [embedGocTA, embedDichTA], ephemeral: true });

            } catch (err) {
                console.error('L·ªói khi d·ªãch:', err);
                interaction.reply({ content: `ƒê√£ x·∫£y ra l·ªói khi d·ªãch tin nh·∫Øn.`, ephemeral: true });
            }
        }
    }
};