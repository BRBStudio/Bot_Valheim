const ytSearch = require("yt-search");

// H√†m t√¨m ki·∫øm video tr√™n YouTube
async function searchVideo(query) {
	try {
		const searchResults = await ytSearch(query); // T√¨m ki·∫øm video

		if (searchResults && searchResults.videos.length > 0) {
			return searchResults.videos[0].url; // Tr·∫£ v·ªÅ URL c·ªßa video ƒë·∫ßu ti√™n
		} else {
			return null; // Kh√¥ng t√¨m th·∫•y video
		}
	} catch (error) {
		console.error("L·ªói t√¨m ki·∫øm video:", error);
		return null;
	}
}

	// H√†m ki·ªÉm tra n·∫øu query l√† URL h·ª£p l·ªá
function isURL(str) {
	const urlRegex =
		/^(https?:\/\/)?([\w-]+(\.[\w-]+)+\/?|localhost|\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})(:\d+)?(\/\S*)?$/;
	return urlRegex.test(str);
}

module.exports = {
	name: "ytb",
	description: "üî∏ T√¨m ki·∫øm video tr√™n ytb.",
	hd: 'üî∏ ?ytb <t√™n video b·∫°n mu·ªën t√¨m>',

	aliases: ['tv11'],

	async execute(message, args) {
		const query = args.join(" ");

		if (!query) {
			return message.channel.send("B·∫°n ph·∫£i cung c·∫•p t√™n ho·∫∑c URL c·ªßa video!");
		}

		const isURLResult = isURL(query);

		if (isURLResult) {
			await playVideo(message, query);
		} else {
			const videoURL = await searchVideo(query);

			if (videoURL) {
				await playVideo(message, videoURL);
			} else {
				await message.channel.send(`Kh√¥ng t√¨m th·∫•y video cho: ${query}`);
			}
		}
	},
};

// H√†m ph√°t video (d√†nh cho ti·ªÅn t·ªë ?)
async function playVideo(message, videoURL) {
	try {
		await message.channel.send("ƒê√¢y l√† video c·ªßa b·∫°n: " + videoURL);
		// C·∫ßn s·ª≠ d·ª•ng m·ªôt th∆∞ vi·ªán √¢m thanh Discord ƒë·ªÉ ph√°t video v√†o k√™nh tho·∫°i c·ª• th·ªÉ
	} catch (error) {
		console.error("L·ªói khi ph√°t video:", error);
		await message.channel.send("ƒê√£ x·∫£y ra l·ªói khi ph√°t video.");
	}
}





















// // const { google } = require("googleapis");

// // const youtube = google.youtube({
// //   version: "v3",
// //   auth: "AIzaSyCwmQEeGyYEMmHMpzbuA-XzsLjAVx1UziQ", // API c·ªßa youtube
// // });

// // // H√†m t√¨m ki·∫øm video tr√™n YouTube
// // async function searchVideo(query) {
// //   try {
// //     const response = await youtube.search.list({
// //       part: "snippet",
// //       q: query,
// //       type: "video",
// //     });

// //     if (response.data.items.length > 0) {
// //       return response.data.items[0].id.videoId;
// //     } else {
// //       return null;
// //     }
// //   } catch (error) {
// //     console.error("L·ªói t√¨m ki·∫øm video:", error);
// //     return null;
// //   }
// // }

// // // H√†m ki·ªÉm tra n·∫øu query l√† URL h·ª£p l·ªá
// // function isURL(str) {
// //   const urlRegex =
// //     /^(https?:\/\/)?([\w-]+(\.[\w-]+)+\/?|localhost|\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})(:\d+)?(\/\S*)?$/;
// //   return urlRegex.test(str);
// // }

// // module.exports = {
// //   name: 'ytb',  // T√™n l·ªánh, d√πng ƒë·ªÉ ng∆∞·ªùi d√πng g·ªçi l·ªánh ti·ªÅn t·ªë ?
// //   description: '‚ô¨Àöüéß | xem phim.!',  // M√¥ t·∫£ ng·∫Øn g·ªçn v·ªÅ l·ªánh
// //   async execute(message, args) {
// //     const query = args.join(" ");  // L·∫•y query t·ª´ c√°c ƒë·ªëi s·ªë ng∆∞·ªùi d√πng nh·∫≠p v√†o

// //     if (!query) {
// //       return message.channel.send("B·∫°n ph·∫£i cung c·∫•p t√™n ho·∫∑c URL c·ªßa video!");
// //     }

// //     const isURLResult = isURL(query);

// //     if (isURLResult) {
// //       await playVideo(message, query);
// //     } else {
// //       const videoId = await searchVideo(query);
// //       if (videoId) {
// //         const videoURL = `https://www.youtube.com/watch?v=${videoId}`;
// //         await playVideo(message, videoURL);
// //       } else {
// //         await message.channel.send(`Kh√¥ng t√¨m th·∫•y video cho: ${query}`);
// //       }
// //     }
// //   },
// // };

// // // H√†m ph√°t video (d√†nh cho ti·ªÅn t·ªë ?)
// // async function playVideo(message, videoURL) {
// //   try {
// //     // Tr·∫£ l·ªùi tin nh·∫Øn v·ªõi video URL
// //     await message.channel.send("ƒê√¢y l√† video c·ªßa b·∫°n: " + videoURL);
// //     // C·∫ßn s·ª≠ d·ª•ng m·ªôt th∆∞ vi·ªán √¢m thanh Discord ƒë·ªÉ ph√°t √¢m thanh c·ªßa video v√†o k√™nh tho·∫°i c·ª• th·ªÉ
// //   } catch (error) {
// //     console.error("L·ªói khi ph√°t video:", error);
// //     await message.channel.send("ƒê√£ x·∫£y ra l·ªói khi ph√°t video.");
// //   }
// // }
