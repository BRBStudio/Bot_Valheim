const { EmbedBuilder } = require('discord.js');
const BRB_Fishventure = require('../../utils/BRB_Fishventure');
const FishyGameModel = require('../../schemas/FishyGameSchema');
const EconomySystem = require('../../schemas/economySystem');

module.exports = {
    name: 'Fishventure',
    description: 
        `üî∏ Cu·ªôc SƒÉn C√° M·∫°o Hi·ªÉm. Ch∆∞a ho√†n th√†nh, m·ªçi ng∆∞·ªùi c·ª© ch∆°i\n` +
        `¬†¬†¬†¬†¬†¬†¬†vui v·∫ª th√¥i ^^`,
    aliases: ['cc', 'g3'],

    async execute(msg, args) {
        try {
            const guildId = msg.guild.id; // ID m√°y ch·ªß
            const userId = msg.author.id; // ID ng∆∞·ªùi ch∆°i

            // L·∫•y d·ªØ li·ªáu kinh t·∫ø t·ª´ MongoDB
            let economyData = await EconomySystem.findOne({ Guild: guildId, User: userId });
            if (!economyData) {
                return msg.channel.send('B·∫°n ch∆∞a c√≥ t√†i kho·∫£n kinh t·∫ø. H√£y t·∫°o t√†i kho·∫£n tr∆∞·ªõc khi ch∆°i game n√†y <a:muitenxuong:1320596244225327246> \`\`\`/economy\`\`\`');
            }

            // T√¨m ho·∫∑c t·∫°o d·ªØ li·ªáu FishyGame
            let playerData = await FishyGameModel.findOne({ guildId, userId });
            if (!playerData) {
                playerData = await FishyGameModel.create({
                    guildId,
                    userId,
                    fishes: { rac: 0, vip: 0, condo: 0, cute: 0 }
                });
            }

            // T·∫°o ƒë·ªëi t∆∞·ª£ng FishyGame
            const game = new BRB_Fishventure({
                message: msg,
                player: {
                    id: userId,
                    balance: economyData.Wallet,
                    fishes: playerData.fishes
                },
                isSlashGame: false,
                embed: {
                    title: '<a:tui:1320577075123589130> T√öI C√Å C·ª¶A B·∫†N', // 
                    color: '#00FF00'
                }
            });
            // console.log('Gi√° thu√™ c·∫ßn c√¢u:', game.options.fishyRodPrice);

            // L·∫•y l·ªánh con t·ª´ ng∆∞·ªùi d√πng
            const subcommand = args[0];
            if (!subcommand) {
                return msg.channel.send(
                    `<a:cauca:1320579011281289306> C·∫¶N 10.000 <a:xu:1320563128848744548> ƒê·ªÇ C√ÇU C√Å\n` +
                    `- C√¢u c√° s·ª≠ d·ª•ng l·ªánh: \`\`\`fishventure bg\`\`\`\n` +
                    `- B√°n c√° s·ª≠ d·ª•ng l·ªánh:\`\`\`fishventure sell <lo·∫°i b·∫°n mu·ªën b√°n> <s·ªë l∆∞·ª£ng b·∫°n mu·ªën b√°n>, v√≠ d·ª•: fishventure sell vip 2\`\`\`\n` +
                    `- Ki·ªÉm tra t√∫i c√° s·ª≠ d·ª•ng l·ªánh:\`\`\`fishventure bag\`\`\``
                );
            }

            if (subcommand.toLowerCase() === 'bg') {
                // Ki·ªÉm tra s·ªë d∆∞ trong Wallet
                if (economyData.Wallet < game.options.fishyRodPrice) {
                    return msg.channel.send
                    (
                        `B·∫°n kh√¥ng ƒë·ªß 10.000 <a:xu:1320563128848744548> trong v√≠ ƒë·ªÉ thu√™ c·∫ßn c√¢u.\n` +
                        `D√πng l·ªánh ph√≠a d∆∞·ªõi ƒë·ªÉ ki·ªÉm tra v√≠ c·ªßa b·∫°n <a:muitenxuong:1320596244225327246>: \`\`\`/economy\`\`\``
                    );
                }

                // Th·ª±c hi·ªán h√†nh ƒë·ªông c√¢u c√°
                await game.Begin();

                // C·∫≠p nh·∫≠t s·ªë ti·ªÅn trong Wallet v√† s·ªë l·∫ßn l·ªánh ƒë√£ ch·∫°y
                economyData.Wallet -= game.options.fishyRodPrice;
                economyData.CommandsRan += 1;

                // L∆∞u c·∫≠p nh·∫≠t v√†o MongoDB
                await economyData.save();
                await FishyGameModel.updateOne(
                    { guildId, userId },
                    { $inc: { [`fishes.${game.fishType}`]: 1 } } // TƒÉng s·ªë c√° t∆∞∆°ng ·ª©ng
                );
            } else if (subcommand.toLowerCase() === 'sell') {
                const type = args[1];
                const amount = parseInt(args[2], 10);

                if (!type || isNaN(amount)) {
                    return msg.channel.send('Vui l√≤ng nh·∫≠p lo·∫°i c√° (rac, cute, condo, vip) v√† s·ªë l∆∞·ª£ng c·∫ßn b√°n, v√≠ d·ª•: `fishventure sell vip 2`.');
                }

                // Ki·ªÉm tra s·ªë l∆∞·ª£ng c√° trong kho
                if (!playerData.fishes[type] || playerData.fishes[type] < amount) {
                    return msg.channel.send(`B·∫°n kh√¥ng c√≥ ƒë·ªß c√° lo·∫°i **${type}** ƒë·ªÉ b√°n.`);
                }

                // Th·ª±c hi·ªán h√†nh ƒë·ªông b√°n c√°
                await game.sellFish(type, amount);

                // C·∫≠p nh·∫≠t ti·ªÅn trong Bank v√† s·ªë l·∫ßn l·ªánh ƒë√£ ch·∫°y
                const fishPrice = game.fishes[type].price * amount;
                economyData.Bank += fishPrice;
                economyData.CommandsRan += 1;

                // C·∫≠p nh·∫≠t d·ªØ li·ªáu FishyGame v√† MongoDB
                await economyData.save();
                await FishyGameModel.updateOne(
                    { guildId, userId },
                    { $inc: { [`fishes.${type}`]: -amount } } // Gi·∫£m s·ªë l∆∞·ª£ng c√°
                );
            } else if (subcommand.toLowerCase() === 'bag') {
                // Ki·ªÉm tra kho c√°
                await game.Fishbag();

                // C·∫≠p nh·∫≠t s·ªë l·∫ßn l·ªánh ƒë√£ ch·∫°y
                economyData.CommandsRan += 1;
                await economyData.save();
            } else {
                return msg.channel.send('L·ªánh kh√¥ng h·ª£p l·ªá. Vui l√≤ng s·ª≠ d·ª•ng: `bg`, `sell`, ho·∫∑c `bag`.');
            }
        } catch (error) {
            console.error(error);
            msg.channel.send('ƒê√£ x·∫£y ra l·ªói trong qu√° tr√¨nh th·ª±c hi·ªán l·ªánh.');
        }
    }
};