
const { ActionRowBuilder, ButtonBuilder, ButtonStyle, EmbedBuilder } = require('discord.js');
const economySystem = require('../../schemas/economySystem');
const Lottery = require('../../schemas/LotterySchema');
const moment = require('moment-timezone');

module.exports = {
    name: 'Lottery',
    description: 'üî∏ V·∫≠n M·ªánh Kim C∆∞∆°ng',
    hd: 
        `üî∏ Tr·∫£i nghi·ªám l·ªôc tr·ªùi \`\`\`?Lottery lg1 <s·ªë ti·ªÅn> <s·ªë b·∫°n d·ª± ƒëo√°n>\`\`\`` +
        `¬†¬†¬†¬†¬†üî∏ Th·ª≠ v·∫≠n kim c∆∞∆°ng \`\`\`?Lottery lg2 <s·ªë ti·ªÅn> <s·ªë b·∫°n d·ª± ƒëo√°n>\`\`\`` +
        `¬†¬†¬†¬†¬†üî∏ SƒÉn song s·ªë ph√∫ qu√Ω \`\`\`?Lottery tt <s·ªë ti·ªÅn> <s·ªë b·∫°n d·ª± ƒëo√°n>\`\`\``, // 
    aliases: ['vmkc', 'g6'],

    // .toLowerCase()
    async execute(msg, args) {
        if (!args[0] || args[0].toLowerCase() === 'h') {
            const embedHelp = new EmbedBuilder()
                .setTitle('H∆∞·ªõng D·∫´n Ch∆°i V·∫≠n M·ªánh Kim C∆∞∆°ng')
                .setDescription(
                    "**L·ªÜNH:**\n" +
                    "- Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n\`\`\`?Lottery h\`\`\`\n" +
                    "- Tr·∫£i nghi·ªám l·ªôc tr·ªùi 2 s·ªë (t·ªëi thi·ªÉu 1k <a:xu:1320563128848744548>):\`\`\`?Lottery lg1 <s·ªë ti·ªÅn> <s·ªë b·∫°n d·ª± ƒëo√°n> (2 ch·ªØ s·ªë)\`\`\`\n\n" +
                    "- Th·ª≠ v·∫≠n kim c∆∞∆°ng 3 s·ªë (t·ªëi thi·ªÉu 3k <a:xu:1320563128848744548>): \`\`\`?Lottery lg2 <s·ªë ti·ªÅn> <s·ªë b·∫°n d·ª± ƒëo√°n (3 ch·ªØ s·ªë)>\`\`\`\n\n" +
                    "- SƒÉn song s·ªë ph√∫ qu√Ω (t·ªëi thi·ªÉu 24k <a:xu:1320563128848744548>): \`\`\`?Lottery lg3 <s·ªë ti·ªÅn> <s·ªë b·∫°n d·ª± ƒëo√°n> (2 ch·ªØ s·ªë)\`\`\`\n\n" +
                    "**L∆ØU √ù:**\n" +
                    "- ƒê·ªëi v·ªõi Tr·∫£i nghi·ªám l·ªôc tr·ªùi \`\`\`?Lottery lg1\`\`\` S·ªë ph·∫£i c√≥ 2 ch·ªØ s·ªë (VD: 00, 88).\n" +
                    "- ƒê·ªëi v·ªõi Th·ª≠ v·∫≠n kim c∆∞∆°ng \`\`\`?Lottery lg2\`\`\` S·ªë ph·∫£i c√≥ 3 ch·ªØ s·ªë (VD: 000, 552).\n" +
                    "- ƒê·ªëi v·ªõi SƒÉn song s·ªë ph√∫ qu√Ω \`\`\`?Lottery lg3\`\`\` S·ªë ph·∫£i c√≥ 2 ch·ªØ s·ªë (VD: 00, 99).\n" +
                    "- Ki·ªÉm tra xem t√†i kho·∫£n c·ªßa b·∫°n ƒë√£ s·∫µn s√†ng cho cu·ªôc phi√™u l∆∞u n√†y ch∆∞a."
                )
                .setColor('Blue');
            return msg.channel.send({ embeds: [embedHelp] });
        }

        // L·∫•y ng√†y hi·ªán t·∫°i ·ªü m√∫i gi·ªù Vi·ªát Nam
        const currentDate = moment().tz('Asia/Ho_Chi_Minh').format('DD/MM/YYYY');
        
        // Ki·ªÉm tra ƒë·∫∑t c∆∞·ª£c 2 s·ªë
        if (args[0].toLowerCase() === 'lg1') {
            const betAmount = parseInt(args[1].replace(/\./g, ''));
            const chosenNumber = args[2];

            if (isNaN(betAmount) || betAmount < 1000) {
                return msg.channel.send("H√£y d√¢ng l√™n 1000 <a:xu:1320563128848744548> ƒë·ªÉ m·ªü c·ª≠a v·∫≠n may cho l·ªánh lg1.");
            }

            if (!/^\d{2}$/.test(chosenNumber)) {
                return msg.channel.send("Xin vui l√≤ng cung c·∫•p m·ªôt s·ªë c√≥ ƒë√∫ng 2 ch·ªØ s·ªë, v√† ch√∫ng ta s·∫Ω xem s·ªë ph·∫≠n c·ªßa b·∫°n ra sao (VD: 00, 81).");
            }

            // Ki·ªÉm tra ƒë·∫∑t c∆∞·ª£c g·∫ßn nh·∫•t
            const previousBet = await Lottery.findOne({ Guild: msg.guild.id, User: msg.author.id, chosenType: 'lg1' }).sort({ betTime: -1 });
            if (previousBet && moment(previousBet.betTime, 'HH:mm:ss [ng√†y] DD/MM/YYYY').format('DD/MM/YYYY') === currentDate) {
                    return msg.channel.send
                        (
                            "H√£y ghi nh·ªõ, m·ªói ng√†y ch·ªâ cho ph√©p m·ªôt l·∫ßn ƒë·∫∑t c∆∞·ª£c v·ªõi tr·∫£i nghi·ªám l·ªôc tr·ªùi 2 s·ªë.\n" +
                            "ƒê·ª´ng qu√™n tr·ªü l·∫°i v√†o ng√†y mai ƒë·ªÉ kh·∫≥ng ƒë·ªãnh s·ªë ph·∫≠n c·ªßa b·∫°n!"
                        );
                }

            // Ki·ªÉm tra t√†i kho·∫£n ng√¢n h√†ng
            const userData = await economySystem.findOne({ Guild: msg.guild.id, User: msg.author.id });
            if (!userData || userData.Bank < betAmount) {
                return msg.channel.send("B·∫°n c·∫ßn ph·∫£i t√≠ch l≈©y th√™m <a:xu:1320563128848744548> ƒë·ªÉ c√≥ th·ªÉ tham gia cu·ªôc chi·∫øn n√†y. H√£y thu th·∫≠p th√™m tr∆∞·ªõc khi quay l·∫°i");
            }

            userData.Bank -= betAmount;
            await userData.save();

            const lotteryEntry = new Lottery({
                Guild: msg.guild.id,
                User: msg.author.id,
                displayName: msg.member.displayName,
                betAmount: betAmount,
                chosenNumber: chosenNumber,
                chosenType: 'lg1',
                betTime: moment().tz('Asia/Ho_Chi_Minh').format('HH:mm:ss [ng√†y] DD/MM/YYYY')
            });
            await lotteryEntry.save();

            msg.channel.send(`Ch√∫c m·ª´ng! B·∫°n ƒë√£ g·ª≠i g·∫Øm **${betAmount}** <a:xu:1320563128848744548> v√†o s·ªë **${chosenNumber}**, h√£y ch·ªù ƒë·ª£i s·ª± k·ª≥ di·ªáu s·∫Øp ƒë·∫øn!`);
        }

        // Ki·ªÉm tra ƒë·∫∑t c∆∞·ª£c 3 s·ªë
        if (args[0].toLowerCase() === 'lg2') {
            const betAmount = parseInt(args[1].replace(/\./g, ''));
            const chosenNumber = args[2];

            if (isNaN(betAmount) || betAmount < 5000) {
                return msg.channel.send("ƒê·ªÉ b∆∞·ªõc v√†o cu·ªôc phi√™u l∆∞u n√†y, h√£y ƒë·∫£m b·∫£o r·∫±ng s·ªë <a:xu:1320563128848744548> b·∫°n ƒë·∫ßu t∆∞ kh√¥ng d∆∞·ªõi 3k <a:xu:1320563128848744548> cho l·ªánh lg2.");
            }

            if (!/^\d{3}$/.test(chosenNumber)) {
                return msg.channel.send("Vui l√≤ng ƒë·∫£m b·∫£o r·∫±ng b·∫°n ƒë√£ ch·ªçn m·ªôt con s·ªë ho√†n h·∫£o v·ªõi 3 ch·ªØ s·ªë, (VD: 000, 552");
            }

            // Ki·ªÉm tra ƒë·∫∑t c∆∞·ª£c g·∫ßn nh·∫•t
            const previousBet = await Lottery.findOne({ Guild: msg.guild.id, User: msg.author.id, chosenType: 'lg2' }).sort({ betTime: -1 });
            if (previousBet && moment(previousBet.betTime, 'HH:mm:ss [ng√†y] DD/MM/YYYY').format('DD/MM/YYYY') === currentDate) {
                    return msg.channel.send
                    (
                        "H√£y ghi nh·ªõ, m·ªói ng√†y ch·ªâ cho ph√©p m·ªôt l·∫ßn ƒë·∫∑t c∆∞·ª£c v·ªõi th·ª≠ v·∫≠n kim c∆∞∆°ng 3 s·ªë.\n" +
                        "ƒê·ª´ng qu√™n tr·ªü l·∫°i v√†o ng√†y mai ƒë·ªÉ kh·∫≥ng ƒë·ªãnh s·ªë ph·∫≠n c·ªßa b·∫°n!"
                    );
                }

            // Ki·ªÉm tra t√†i kho·∫£n ng√¢n h√†ng
            const userData = await economySystem.findOne({ Guild: msg.guild.id, User: msg.author.id });
            if (!userData || userData.Bank < betAmount) {
                return msg.channel.send("B·∫°n c·∫ßn ph·∫£i t√≠ch l≈©y th√™m <a:xu:1320563128848744548> ƒë·ªÉ c√≥ th·ªÉ tham gia cu·ªôc chi·∫øn n√†y. H√£y thu th·∫≠p th√™m tr∆∞·ªõc khi quay l·∫°i.");
            }

            userData.Bank -= betAmount;
            await userData.save();

            const lotteryEntry = new Lottery({
                Guild: msg.guild.id,
                User: msg.author.id,
                displayName: msg.member.displayName,
                betAmount: betAmount,
                chosenNumber: chosenNumber,
                chosenType: 'lg2',
                betTime: moment().tz('Asia/Ho_Chi_Minh').format('HH:mm:ss [ng√†y] DD/MM/YYYY')
            });
            await lotteryEntry.save();

            msg.channel.send(`Ch√∫c m·ª´ng! B·∫°n ƒë√£ g·ª≠i g·∫Øm **${betAmount}** <a:xu:1320563128848744548> v√†o s·ªë **${chosenNumber}**, h√£y ch·ªù ƒë·ª£i s·ª± k·ª≥ di·ªáu s·∫Øp ƒë·∫øn!.`);
        }

        // X·ª≠ l√Ω l·ªánh ch∆°i song s·ªë ph√∫ qu√Ω 2 s·ªë
        if (args[0].toLowerCase() === 'lg3') {
            const betAmount = parseInt(args[1].replace(/\./g, ''));
            const chosenNumber = args[2];

            if (isNaN(betAmount) || betAmount < 24000) {
                return msg.channel.send("B·∫°n c·∫ßn √≠t nh·∫•t 24k <a:xu:1320563128848744548> ƒë·ªÉ tham gia song s·ªë ph√∫ qu√Ω.");
            }

            if (betAmount % 24000 !== 0) {
                return msg.channel.send("S·ªë ti·ªÅn ƒë·∫∑t c∆∞·ª£c kh√¥ng h·ª£p l·ªá! 24k <a:xu:1320563128848744548> = 1 ƒëi·ªÉm . V√≠ d·ª•: 24k, 48k, 72k...");
            }

            if (!/^\d{2}$/.test(chosenNumber)) {
                return msg.channel.send("Vui l√≤ng ch·ªçn m·ªôt s·ªë c√≥ ƒë√∫ng 2 ch·ªØ s·ªë (VD: 00, 81).");
            }

            // Ki·ªÉm tra ƒë·∫∑t c∆∞·ª£c g·∫ßn nh·∫•t
            const previousBet = await Lottery.findOne({ Guild: msg.guild.id, User: msg.author.id, chosenType: 'lg3' }).sort({ betTime: -1 });
            if (previousBet && moment(previousBet.betTime, 'HH:mm:ss [ng√†y] DD/MM/YYYY').format('DD/MM/YYYY') === currentDate) {
                    return msg.channel.send
                    (
                        "H√£y ghi nh·ªõ, m·ªói ng√†y ch·ªâ cho ph√©p m·ªôt l·∫ßn ƒë·∫∑t c∆∞·ª£c v·ªõi SƒÉn song s·ªë ph√∫ qu√Ω 2 s·ªë.\n" +
                        "ƒê·ª´ng qu√™n tr·ªü l·∫°i v√†o ng√†y mai ƒë·ªÉ kh·∫≥ng ƒë·ªãnh s·ªë ph·∫≠n c·ªßa b·∫°n!"
                    );
                }

            const userData = await economySystem.findOne({ Guild: msg.guild.id, User: msg.author.id });
            if (!userData || userData.Bank < betAmount) {
                return msg.channel.send("B·∫°n kh√¥ng ƒë·ªß ti·ªÅn trong ng√¢n h√†ng ƒë·ªÉ tham gia song s·ªë ph√∫ qu√Ω.");
            }

            userData.Bank -= betAmount;
            await userData.save();

            const lotteryEntry = new Lottery({
                Guild: msg.guild.id,
                User: msg.author.id,
                displayName: msg.member.displayName,
                betAmount: betAmount,
                chosenNumber: chosenNumber,
                chosenType: 'lg3',
                betTime: moment().tz('Asia/Ho_Chi_Minh').format('HH:mm:ss [ng√†y] DD/MM/YYYY'),
            });

            await lotteryEntry.save();

            msg.channel.send(`B·∫°n ƒë√£ ƒë·∫∑t c∆∞·ª£c **${betAmount}** <a:xu:1320563128848744548> v√†o s·ªë **${chosenNumber}** cho song s·ªë ph√∫ qu√Ω. Ch√∫c may m·∫Øn!`);
        }
    },
};




