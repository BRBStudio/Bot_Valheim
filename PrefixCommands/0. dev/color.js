const { EmbedBuilder } = require('discord.js');
const CommandStatus = require('../../schemas/Command_Status');
const Color = require('color');
const config = require('../../config');
const translate = require('translate-google');

/*
t√¨m b·∫£ng m√†u ƒë·ªÉ vi·∫øt code
*/

module.exports = {
    name: 'color',
    description: '`üî∏ L·ªÜNH D√ÄNH CHO DEV`',
    hd: '`üî∏ C√°ch d√πng: Kh√¥ng c√≥ th√¥ng tin`',
    q: '`üî∏ D√†nh cho DEV`',
    aliases: ['cl', 'dev3'],
    async execute(msg) {
        const commandStatus = await CommandStatus.findOne({ command: '?color' });
        if (commandStatus && commandStatus.status === 'off') {
            return msg.channel.send('L·ªánh n√†y ƒë√£ b·ªã t·∫Øt, vui l√≤ng th·ª≠ l·∫°i sau.');
        }

        if (!config.specialUsers.includes(msg.author.id)) {
            return msg.channel.send("B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!");
        }

        const args = msg.content.split(' ').slice(1);
        if (args.length === 0) {
            return msg.channel.send('Vui l√≤ng nh·∫≠p t√™n m√†u ho·∫∑c m√£ hex.');
        }

        let input = args.join(' ').trim().toLowerCase();

        // X·ª≠ l√Ω ƒë·∫∑c bi·ªát cho c√°c t·ª´ "v√†ng" v√† "cam"
        if (input === 'v√†ng') input = 'yellow';
        if (input === 'cam') input = 'orange';
        if (input === 'xanh ƒë·∫πp') input = 'cyan';

        const isHex = /^#?[0-9A-Fa-f]{6}$/.test(input);
        const isEnglishColor = (() => {
            try {
                Color(input);
                return true;
            } catch {
                return false;
            }
        })();

        if (!isHex && !isEnglishColor) {
            try {
                input = await translate(input, { from: 'vi', to: 'en' });
            } catch (error) {
                return msg.channel.send('Kh√¥ng th·ªÉ d·ªãch t√™n m√†u, vui l√≤ng th·ª≠ l·∫°i.');
            }
        }

        let color;
        try {
            color = Color(input);
        } catch (error) {
            return msg.channel.send('ƒê·∫ßu v√†o m√†u kh√¥ng h·ª£p l·ªá. Vui l√≤ng nh·∫≠p ƒë√∫ng, v√≠ d·ª•: ƒë·ªè, red, v√†ng, yellow ho·∫∑c m√£ HEX nh∆∞ #FF0000, #FFFF00.');
        }

        const hex = color.hex();
        const rgb = color.rgb().array();
        const rgbString = color.rgb().string();
        const hsl = color.hsl().string();
        const cmyk = color.cmyk().array();
        const cmykFormatted = `cmyk(${cmyk[0]}%, ${cmyk[1]}%, ${cmyk[2]}%, ${cmyk[3]}%)`;
        const hsv = color.hsv().string();
        const lab = color.lab().array().join(', ');
        const xyz = color.xyz().array().join(', ');
        const lch = color.lch().array().join(', ');

        const getAnsi256 = (r, g, b) => {
            const ansi256 = Math.round((r / 255) * 5) * 36 + Math.round((g / 255) * 5) * 6 + Math.round((b / 255) * 5) + 16;
            return `\\x1b[38;5;${ansi256}m`;
        };

        const ansi = getAnsi256(rgb[0], rgb[1], rgb[2]);

        const embed = new EmbedBuilder()
            .setColor(parseInt(hex.replace('#', ''), 16))
            .setTitle('Th√¥ng tin m√†u')
            .addFields(
                { name: '**HEX**', value: `\`\`\`${hex}\`\`\``, inline: true },
                { name: '**RGB**', value: `\`\`\`${rgbString}\`\`\``, inline: true },
                { name: '**HSL**', value: `\`\`\`${hsl}\`\`\``, inline: true },
                { name: '**CMYK**', value: `\`\`\`${cmykFormatted}\`\`\``, inline: true },
                { name: '**HSV**', value: `\`\`\`${hsv}\`\`\``, inline: true },
                { name: '**LAB**', value: `\`\`\`${lab}\`\`\``, inline: true },
                { name: '**XYZ**', value: `\`\`\`${xyz}\`\`\``, inline: true },
                { name: '**LCH**', value: `\`\`\`${lch}\`\`\``, inline: true },
                { name: '**ANSI**', value: `\`\`\`${ansi}\`\`\``, inline: false },
            );

        await msg.channel.send({ embeds: [embed] });
    },
};



// const { EmbedBuilder } = require('discord.js');
// const CommandStatus = require('../../schemas/Command_Status');
// const Color = require('color');
// const config = require('../../config');
// const translate = require(`translate-google`); //@iamtraction/google-translate

// // B·∫£ng √°nh x·∫° t√™n m√†u ti·∫øng Vi·ªát sang ti·∫øng Anh
// const colorMap = {

//     'v√†ng': 'yellow',
//     'xanh': 'blue',
//     'xanh l√°': 'green',
//     'cam': 'orange',
//     't√≠m': 'purple',
//     'h·ªìng': 'pink',
//     'n√¢u': 'brown',
//     'xanh y√™u th√≠ch': `cyan`
// };

// module.exports = {
//     name: 'color',
//     description: '`üî∏ L·ªÜNH D√ÄNH CHO DEV`',
//     hd: '`üî∏ C√°ch d√πng: Kh√¥ng c√≥ th√¥ng tin`',
//     q: '`üî∏ D√†nh cho DEV`',
//     aliases: ['cl', 'dev3'],
//     async execute(msg) {
//         // Ki·ªÉm tra tr·∫°ng th√°i c·ªßa l·ªánh
//         const commandStatus = await CommandStatus.findOne({ command: '?color' });

//         // N·∫øu l·ªánh ƒëang t·∫Øt, g·ª≠i th√¥ng b√°o v√† kh√¥ng th·ª±c hi·ªán l·ªánh
//         if (commandStatus && commandStatus.status === 'off') {
//             return msg.channel.send('L·ªánh n√†y ƒë√£ b·ªã t·∫Øt, vui l√≤ng th·ª≠ l·∫°i sau.');
//         }

//         // Ki·ªÉm tra quy·ªÅn ng∆∞·ªùi d√πng
//         if (!config.specialUsers.includes(msg.author.id)) {
//             return msg.channel.send("B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!");
//         }

//         // L·∫•y ƒë·∫ßu v√†o t·ª´ tin nh·∫Øn sau l·ªánh ti·ªÅn t·ªë
//         const args = msg.content.split(' ').slice(1);
//         if (args.length === 0) {
//             return msg.channel.send('Vui l√≤ng nh·∫≠p t√™n m√†u ho·∫∑c m√£ hex.');
//         }

//         let input = args.join(' ').trim().toLowerCase();

//         // Ki·ªÉm tra xem ƒë·∫ßu v√†o c√≥ ph·∫£i t√™n m√†u ti·∫øng Vi·ªát kh√¥ng
//         if (colorMap[input]) {
//             input = colorMap[input]; // √Ånh x·∫° sang t√™n m√†u ti·∫øng Anh
//         }

//         // N·∫øu ƒë·∫ßu v√†o kh√¥ng ph·∫£i m√£ HEX ho·∫∑c t√™n m√†u ti·∫øng Anh, th·ª≠ d·ªãch
//         const isHex = /^#?[0-9A-Fa-f]{6}$/.test(input);
//         const isEnglishColor = (() => {
//             try {
//                 Color(input);
//                 return true;
//             } catch {
//                 return false;
//             }
//         })();

//         // N·∫øu ƒë·∫ßu v√†o kh√¥ng ph·∫£i l√† m√£ HEX v√† kh√¥ng ph·∫£i t√™n m√†u ti·∫øng Anh, th·ª≠ d·ªãch t·ª´ ti·∫øng Vi·ªát sang ti·∫øng Anh
//         if (!isHex && !isEnglishColor) {
//             try {
//                 // D·ªãch t·ª´ ti·∫øng Vi·ªát sang ti·∫øng Anh
//                 input = await translate(input, { from: 'vi', to: 'en' });
//             } catch (error) {
//                 return msg.channel.send('Kh√¥ng th·ªÉ d·ªãch t√™n m√†u, vui l√≤ng th·ª≠ l·∫°i.');
//             }
//         }

//         let color;
//         try {
//             color = Color(input); // T·∫°o ƒë·ªëi t∆∞·ª£ng Color t·ª´ input
//         } catch (error) {
//             return msg.channel.send('ƒê·∫ßu v√†o m√†u kh√¥ng h·ª£p l·ªá. Vui l√≤ng nh·∫≠p ƒë√∫ng, v√≠ d·ª•: ƒë·ªè, red, v√†ng, yellow ho·∫∑c m√£ HEX nh∆∞ #FF0000, #FFFF00.');
//         }

//         // C√°c ƒë·ªãnh d·∫°ng m√†u
//         const hex = color.hex();
//         const rgb = color.rgb().array();
//         const rgbString = color.rgb().string();
//         const hsl = color.hsl().string();
//         const cmyk = color.cmyk().array();
//         const cmykFormatted = `cmyk(${cmyk[0]}%, ${cmyk[1]}%, ${cmyk[2]}%, ${cmyk[3]}%)`;
//         const hsv = color.hsv().string();
//         const lab = color.lab().array().join(', ');
//         const xyz = color.xyz().array().join(', ');
//         const lch = color.lch().array().join(', ');

//         // H√†m √°nh x·∫° m√£ m√†u sang ANSI 256
//         const getAnsi256 = (r, g, b) => {
//             const ansi256 = Math.round(((r / 255) * 5)) * 36 + Math.round(((g / 255) * 5)) * 6 + Math.round(((b / 255) * 5)) + 16;
//             return `\\x1b[38;5;${ansi256}m`;
//         };

//         const ansi = getAnsi256(rgb[0], rgb[1], rgb[2]);

//         // T·∫°o embed ƒë·ªÉ hi·ªÉn th·ªã c√°c th√¥ng tin m√†u
//         const embed = new EmbedBuilder()
//             .setColor(parseInt(hex.replace('#', ''), 16)) // ƒê·∫∑t m√†u cho ƒë∆∞·ªùng vi·ªÅn embed
//             .setTitle('Th√¥ng tin m√†u')
//             .addFields(
//                 { name: '**HEX**', value: `\`\`\`${hex}\`\`\``, inline: true },
//                 { name: '**RGB**', value: `\`\`\`${rgbString}\`\`\``, inline: true },
//                 { name: '**HSL**', value: `\`\`\`${hsl}\`\`\``, inline: true },
//                 { name: '**CMYK**', value: `\`\`\`${cmykFormatted}\`\`\``, inline: true },
//                 { name: '**HSV**', value: `\`\`\`${hsv}\`\`\``, inline: true },
//                 { name: '**LAB**', value: `\`\`\`${lab}\`\`\``, inline: true },
//                 { name: '**XYZ**', value: `\`\`\`${xyz}\`\`\``, inline: true },
//                 { name: '**LCH**', value: `\`\`\`${lch}\`\`\``, inline: true },
//                 { name: '**ANSI**', value: `\`\`\`${ansi}\`\`\``, inline: false },
//             );

//         // G·ª≠i embed ch·ª©a c√°c ƒë·ªãnh d·∫°ng m√†u
//         await msg.channel.send({ embeds: [embed] });
//     },
// };