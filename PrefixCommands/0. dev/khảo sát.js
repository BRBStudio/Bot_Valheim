const { EmbedBuilder, ButtonBuilder, ActionRowBuilder, ChannelType, ButtonStyle, PermissionsBitField } = require('discord.js');
const KsModel = require('../../schemas/ks_Schema');
const config = require('../../config');

module.exports = {
    name: 'survey',
    description: '\`üî∏ L·ªÜNH D√ÄNH CHO DEV\`',
    hd: `\`üî∏ C√°ch d√πng: Kh√¥ng c√≥ th√¥ng tin\``,
    q: `\`üî∏ D√†nh cho DEV\``,
    aliases: ['ksb', 'dev4'],

/*
Kh·∫£o s√°t to√†n b·ªô m√°y ch·ªß
*/

    async execute(msg, args) {

        if (!config.specialUsers.includes(msg.author.id)) { 
            return msg.channel.send("B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!"); 
        }

        // Ki·ªÉm tra n·∫øu ng∆∞·ªùi ch∆°i y√™u c·∫ßu h∆∞·ªõng d·∫´n
        if (args[0].toLowerCase() === 'h') {
            // T·∫°o h∆∞·ªõng d·∫´n d∆∞·ªõi d·∫°ng Embed
            const helpEmbed = new EmbedBuilder()
                .setColor('Blue')
                .setTitle('H∆Ø·ªöNG D·∫™N S·ª¨ D·ª§NG L·ªÜNH SURVEY')
                .setDescription(
                    `L·ªánh \`?survey\` h·ªó tr·ª£ c√°c ch·ª©c nƒÉng kh·∫£o s√°t trong m√°y ch·ªß.\n\n` +
                    `**C√∫ ph√°p s·ª≠ d·ª•ng:**\n` +
                    `\`\`\`?survey <t√πy ch·ªçn>\`\`\`\n` +
                    `**C√°c t√πy ch·ªçn hi·ªán c√≥:**\n` +
                    `‚Ä¢ \`list\`: Hi·ªÉn th·ªã danh s√°ch t·∫•t c·∫£ d·ªØ li·ªáu kh·∫£o s√°t trong h·ªá th·ªëng.\n` +
                    `‚Ä¢ \`h\`: Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng l·ªánh n√†y.\n\n` +
                    `**V√≠ d·ª• c·ª• th·ªÉ:**\n` +
                    `- \`?survey list\`: L·∫•y danh s√°ch kh·∫£o s√°t c·ªßa t·∫•t c·∫£ ng∆∞·ªùi d√πng trong h·ªá th·ªëng.\n` +
                    `- \`?survey h\`: Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng (l·ªánh n√†y).`
                )
                .setFooter({ text: 'L∆∞u √Ω: L·ªánh n√†y ch·ªâ d√†nh cho DEV v√† ch·ªâ ho·∫°t ƒë·ªông trong m√°y ch·ªß.' });

            // G·ª≠i Embed h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng
            return msg.channel.send({ embeds: [helpEmbed] });
        }
        
        // Ki·ªÉm tra n·∫øu ng∆∞·ªùi ch∆°i y√™u c·∫ßu danh s√°ch 
        if (args[0].toLowerCase() === 'list') {
            // L·∫•y t·∫•t c·∫£ d·ªØ li·ªáu t·ª´ MongoDB
            const results = await KsModel.find();

            // Ki·ªÉm tra n·∫øu kh√¥ng c√≥ d·ªØ li·ªáu n√†o ƒë∆∞·ª£c t√¨m th·∫•y
            if (results.length === 0) {
                return msg.channel.send("Kh√¥ng c√≥ d·ªØ li·ªáu n√†o trong h·ªá th·ªëng ƒë·ªÉ hi·ªÉn th·ªã.");
            }

            // T·∫°o m·ªôt ƒë·ªëi t∆∞·ª£ng ƒë·ªÉ l∆∞u tr·ªØ k·∫øt qu·∫£ theo t·ª´ng m√°y ch·ªß
            const guildResults = {};

            // Duy·ªát qua t·∫•t c·∫£ k·∫øt qu·∫£ v√† ph√¢n lo·∫°i theo m√°y ch·ªß
            results.forEach(data => {
                const { guildId, guildName, userId, displayName, correctAnswers, questions } = data;

                // T·∫°o c·∫•u tr√∫c cho m·ªói m√°y ch·ªß
                if (!guildResults[guildId]) {
                    guildResults[guildId] = {
                        guildName: guildName,
                        users: []
                    };
                }

                // Th√™m th√¥ng tin ng∆∞·ªùi d√πng v√†o m√°y ch·ªß t∆∞∆°ng ·ª©ng
                guildResults[guildId].users.push({
                    userId: userId,
                    displayName: displayName,
                    correctAnswers: correctAnswers,
                    questions: questions
                });
            });

            // T·∫°o danh s√°ch c√°c th√¥ng ƒëi·ªáp
            const messages = [];

            // Duy·ªát qua t·ª´ng m√°y ch·ªß v√† ƒë·ªãnh d·∫°ng n·ªôi dung
            for (const [guildId, data] of Object.entries(guildResults)) {
                let pageContent = `\`\`\`yml\nM√°y ch·ªß: ${data.guildName} (ID: ${guildId})\n`; 
                
                data.users.forEach(user => {
                    let userContent = `‚Ä¢ T√™n hi·ªÉn th·ªã: ${user.displayName}\n`;
                    userContent += `‚Ä¢ ID ng∆∞·ªùi d√πng: ${user.userId}\n`;
                    userContent += `‚Ä¢ T·ªïng s·ªë c√¢u tr·∫£ l·ªùi ƒë√∫ng: ${user.correctAnswers}\n`;

                    user.questions.forEach(question => {
                        userContent += `\n üç¨C√¢u h·ªèi: ${question.question}\n`;
                        userContent += `        üå∏ C√¢u tr·∫£ l·ªùi: ${question.answer}\n`;
                        userContent += `        üå∏ **Tr·∫°ng th√°i:** ${question.status}\n`;
                    });

                    if ((pageContent + userContent).length > 1900) { // N·∫øu th√™m s·∫Ω v∆∞·ª£t qu√° 2000 k√Ω t·ª±
                        pageContent += `\`\`\``;
                        messages.push(pageContent);
                        pageContent = `\`\`\`yml\nM√°y ch·ªß: ${data.guildName} (ID: ${guildId})\n`; 
                    }
                    pageContent += userContent;
                });

                pageContent += `\`\`\`\n\n`; 
                messages.push(pageContent);
            }

            // Ki·ªÉm tra n·∫øu m·∫£ng messages r·ªóng tr∆∞·ªõc khi g·ª≠i
            if (messages.length === 0) {
                return msg.channel.send("Kh√¥ng c√≥ d·ªØ li·ªáu h·ª£p l·ªá ƒë·ªÉ hi·ªÉn th·ªã.");
            }

            
            // G·ª≠i th√¥ng ƒëi·ªáp ƒë·∫ßu ti√™n
            const initialMessage = await msg.channel.send(messages[0]);

            // T·∫°o n√∫t ƒë·ªÉ chuy·ªÉn trang
            const row = new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                        .setCustomId('prevv')
                        .setLabel('Trang tr∆∞·ªõc')
                        .setStyle(ButtonStyle.Primary)
                        .setDisabled(messages.length <= 1),
                    new ButtonBuilder()
                        .setCustomId('nextr')
                        .setLabel('Trang sau')
                        .setStyle(ButtonStyle.Primary)
                        .setDisabled(messages.length <= 1)
                );

            await initialMessage.edit({ components: [row] });

            let currentPageIndex = 0;

            // T·∫°o m·ªôt collector ƒë·ªÉ x·ª≠ l√Ω c√°c n√∫t b·∫•m
            const filter = i => {
                return i.user.id === msg.author.id;
            };
            
            const collector = initialMessage.createMessageComponentCollector({ filter, time: 3600000 });

            collector.on('collect', async i => {
                if (i.customId === 'prevv') {
                    currentPageIndex = Math.max(0, currentPageIndex - 1); 
                } else if (i.customId === 'nextr') {
                    currentPageIndex = Math.min(messages.length - 1, currentPageIndex + 1); 
                }

                row.components[0].setDisabled(currentPageIndex === 0);
                row.components[1].setDisabled(currentPageIndex === messages.length - 1);

                await i.update({ 
                    content: `${messages[currentPageIndex]}**Trang:** ${currentPageIndex + 1}/${messages.length}`, 
                    components: [row] 
                });
            });

            collector.on('end', () => {
                row.components.forEach(button => button.setDisabled(true));
                initialMessage.edit({ components: [row] });
            });

            await initialMessage.edit({ 
                content: `${messages[0]}**Trang:** 1/${messages.length}`, 
                components: [row] 
            });
            return;
        }

        if (args[0].toLowerCase() === 'send') {
            const guilds = msg.client.guilds.cache;
            for (const guild of guilds.values()) {
                // T√¨m danh m·ª•c 'Th√¥ng B√°o T·ª´ Dev'
                let devCategory = guild.channels.cache.find(ch => ch.type === ChannelType.GuildCategory && ch.name === 'Th√¥ng B√°o T·ª´ Bot');
                // T√¨m k√™nh '888'
                let devChannel = guild.channels.cache.find(ch => ch.type === ChannelType.GuildText && ch.name === 'kh·∫£o_s√°t_bot');

                // Tr∆∞·ªùng h·ª£p 1: C√≥ danh m·ª•c nh∆∞ng kh√¥ng c√≥ k√™nh '888' trong danh m·ª•c ƒë√≥
                if (devCategory && (!devChannel || devChannel.parentId !== devCategory.id)) {
                    if (devChannel && devChannel.parentId !== devCategory.id) {
                        await devChannel.delete(); // X√≥a k√™nh n·∫øu kh√¥ng thu·ªôc danh m·ª•c
                    }
                    // T·∫°o k√™nh m·ªõi '888' trong danh m·ª•c 'Th√¥ng B√°o T·ª´ Dev'
                    devChannel = await guild.channels.create({
                        name: 'kh·∫£o_s√°t_bot',
                        type: ChannelType.GuildText,
                        parent: devCategory,
                        permissionOverwrites: [{
                            id: guild.id,
                            allow: [PermissionsBitField.Flags.ViewChannel],
                            deny: [PermissionsBitField.Flags.SendMessages],
                        }],
                    });
                }
                // Tr∆∞·ªùng h·ª£p 2: N·∫øu kh√¥ng c√≥ danh m·ª•c v√† k√™nh '888'
                else if (!devCategory) {
                    // T·∫°o danh m·ª•c 'Th√¥ng B√°o T·ª´ Dev'
                    devCategory = await guild.channels.create({
                        name: 'Th√¥ng B√°o T·ª´ Bot',
                        type: ChannelType.GuildCategory,
                    });
                    // T·∫°o k√™nh '888' trong danh m·ª•c v·ª´a t·∫°o
                    devChannel = await guild.channels.create({
                        name: 'kh·∫£o_s√°t_bot',
                        type: ChannelType.GuildText,
                        parent: devCategory,
                        permissionOverwrites: [{
                            id: guild.id,
                            allow: [PermissionsBitField.Flags.ViewChannel],
                            deny: [PermissionsBitField.Flags.SendMessages],
                        }],
                    });
                }

                // ƒê·∫∑t danh m·ª•c 'Th√¥ng B√°o T·ª´ Dev' l√™n tr√™n c√πng trong danh s√°ch k√™nh
                await devCategory.setPosition(0);

                const embed = new EmbedBuilder()
                    .setColor('#0099ff')
                    .setTitle('Kh·∫£o s√°t c√¢u h·ªèi (K√™nh n√†y s·∫Ω t·ª± ƒë·ªông x√≥a sau 3 ng√†y)')
                    .setDescription('Vui l√≤ng tr·∫£ l·ªùi c√°c c√¢u h·ªèi b√™n d∆∞·ªõi:')
                    .setFooter({ text: 'Kh·∫£o s√°t n√†y gi√∫p ch√∫ng t√¥i c·∫£i thi·ªán bot t·ªët h∆°n trong t∆∞∆°ng tai!' })
                    .setTimestamp();

                await devChannel.send({ embeds: [embed] });

                // T·∫°o c√°c n√∫t cho c√°c c√¢u h·ªèi
                const buttonRow1 = new ActionRowBuilder().addComponents(
                    new ButtonBuilder().setCustomId('q1_a').setLabel('Kh√¥ng').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q1_b').setLabel('B√¨nh th∆∞·ªùng').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q1_c').setLabel('R·∫•t th√≠ch').setStyle(ButtonStyle.Primary), // ƒê√∫ng
                    new ButtonBuilder().setCustomId('q1_d').setLabel('Th√≠ch').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q1_e').setLabel('ƒê√∫ng v·∫≠y').setStyle(ButtonStyle.Primary)
                );

                const buttonRow2 = new ActionRowBuilder().addComponents(
                    new ButtonBuilder().setCustomId('q2_a').setLabel('ƒê√∫ng').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q2_b').setLabel('R·∫•t th√≠ch').setStyle(ButtonStyle.Primary), // ƒê√∫ng
                    new ButtonBuilder().setCustomId('q2_c').setLabel('Th√≠ch').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q2_d').setLabel('Kh√¥ng').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q2_e').setLabel('B√¨nh th∆∞·ªùng').setStyle(ButtonStyle.Primary)
                );

                const buttonRow3 = new ActionRowBuilder().addComponents(
                    new ButtonBuilder().setCustomId('q3_a').setLabel('R·∫•t th√≠ch').setStyle(ButtonStyle.Primary), // ƒê√∫ng
                    new ButtonBuilder().setCustomId('q3_b').setLabel('B√¨nh th∆∞·ªùng').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q3_c').setLabel('ƒê√∫ng v·∫≠y').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q3_d').setLabel('Kh√¥ng').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q3_e').setLabel('Th√≠ch').setStyle(ButtonStyle.Primary)
                );


                const buttonRow4 = new ActionRowBuilder().addComponents(
                    new ButtonBuilder().setCustomId('q4_a').setLabel('Kh√¥ng').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q4_b').setLabel('kh√¥ng bi·∫øt').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q4_c').setLabel('B√¨nh th∆∞·ªùng').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q4_d').setLabel('Sao c≈©ng ƒë∆∞·ª£c').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q4_e').setLabel('T·∫•t nhi√™n l√† v·∫≠y r·ªìi').setStyle(ButtonStyle.Primary) // ƒê√∫ng
                );

                const buttonRow5 = new ActionRowBuilder().addComponents(
                    new ButtonBuilder().setCustomId('q5_a').setLabel('Kh√¥ng h·∫≥n').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q5_b').setLabel('Ch·ªâ th√≠ch v√†i game').setStyle(ButtonStyle.Primary), // ƒê√∫ng
                    new ButtonBuilder().setCustomId('q5_c').setLabel('B√¨nh th∆∞·ªùng').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q5_d').setLabel('V√¢ng, ƒëi·ªÅu ƒë√≥ l√† t·∫•t nhi√™n').setStyle(ButtonStyle.Primary), // ƒê√∫ng m·ªõi s·ª≠a
                    new ButtonBuilder().setCustomId('q5_e').setLabel('ch·ªâ th√≠ch 1 ƒë·∫øn 2 game').setStyle(ButtonStyle.Primary)
                );

                const buttonRow6 = new ActionRowBuilder().addComponents(
                    new ButtonBuilder().setCustomId('q6_a').setLabel('Tr√≤ ch∆°i th√°ch ƒë·∫•u IQ trong nhi·ªÅu lƒ©nh v·ª±c').setStyle(ButtonStyle.Primary), // ƒê√∫ng
                    new ButtonBuilder().setCustomId('q6_b').setLabel('Tr√≤ ch∆°i IQ').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q6_c').setLabel('Tr√≤ ch∆°i tr√≠ tu·ªá').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q6_d').setLabel('Kh√¥ng bi·∫øt').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q6_e').setLabel('Tr√≤ ch∆°i th√°ch ƒë·∫•u tr√≠ tu·ªá trong nhi·ªÅu lƒ©nh v·ª±c').setStyle(ButtonStyle.Primary)
                );

                const buttonRow7 = new ActionRowBuilder().addComponents(
                    new ButtonBuilder().setCustomId('q7_a').setLabel('5').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q7_b').setLabel('8').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q7_c').setLabel('3').setStyle(ButtonStyle.Primary), // ƒê√∫ng
                    new ButtonBuilder().setCustomId('q7_d').setLabel('6').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q7_e').setLabel('10').setStyle(ButtonStyle.Primary)
                );

                const buttonRow8 = new ActionRowBuilder().addComponents(
                    new ButtonBuilder().setCustomId('q8_a').setLabel('Kh√¥ng nh·ªõ').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q8_b').setLabel('/bot-version').setStyle(ButtonStyle.Primary), // ƒê√∫ng
                    new ButtonBuilder().setCustomId('q8_c').setLabel('/updates-bot').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q8_d').setLabel('/version').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q8_e').setLabel('/version-bot').setStyle(ButtonStyle.Primary)
                );

                const buttonRow9 = new ActionRowBuilder().addComponents(
                    new ButtonBuilder().setCustomId('q9_a').setLabel('H·ªôp th∆∞ l∆∞u tr·ªØ').setStyle(ButtonStyle.Primary), // ƒê√∫ng
                    new ButtonBuilder().setCustomId('q9_b').setLabel('G·ª≠i th∆∞ cho dev').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q9_c').setLabel('·ªí c√≥ l·ªánh n√†y sao?').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q9_d').setLabel('T√¥i ch∆∞a th·ª≠').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q9_e').setLabel('Ph·∫£n h·ªìi v·ªÅ bot cho dev').setStyle(ButtonStyle.Primary) // ƒê√∫ng m·ªõi s·ª≠a
                );

                const buttonRow10 = new ActionRowBuilder().addComponents(
                    new ButtonBuilder().setCustomId('q10_a').setLabel('2').setStyle(ButtonStyle.Primary), // ƒê√∫ng Success
                    new ButtonBuilder().setCustomId('q10_b').setLabel('0').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q10_c').setLabel('3').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q10_d').setLabel('4').setStyle(ButtonStyle.Primary),
                    new ButtonBuilder().setCustomId('q10_e').setLabel('1').setStyle(ButtonStyle.Primary)
                );

                await devChannel.send({ content: 'C√¢u h·ªèi 1: T√¥i th√≠ch c√°c l·ªánh prefix', components: [buttonRow1] });
                await devChannel.send({ content: 'C√¢u h·ªèi 2: T√¥i th√≠ch c√°c l·ªánh trong l·ªánh /commands-bot', components: [buttonRow2] });
                await devChannel.send({ content: 'C√¢u h·ªèi 3: T√¥i th√≠ch c√°c l·ªánh trong l·ªánh /commands-new', components: [buttonRow3] });
                await devChannel.send({ content: 'C√¢u h·ªèi 4: B·∫°n ƒë√°nh gi√° cao v·ªÅ /mail-box ch·ª©?', components: [buttonRow4] });
                await devChannel.send({ content: 'C√¢u h·ªèi 5: T√¥i th√≠ch c√°c game m√† bot BRB Studio c√≥', components: [buttonRow5] });
                await devChannel.send({ content: 'C√¢u h·ªèi 6: L·ªánh `/game-iq` l√† l·ªánh g√¨ ?', components: [buttonRow6] });
                await devChannel.send({ content: 'C√¢u h·ªèi 7: L·ªánh `?qr` c√≥ m·∫•y l·ªánh ph·ª• ?.', components: [buttonRow7] });
                await devChannel.send({ content: 'C√¢u h·ªèi 8: Mu·ªën ki·ªÉm tra phi√™n b·∫£n c·ªßa bot th√¨ d√πng l·ªánh g√¨ ?', components: [buttonRow8] });
                await devChannel.send({ content: 'C√¢u h·ªèi 9: L·ªánh `/mail-box` d√πng ƒë·ªÉ l√†m g√¨?.', components: [buttonRow9] });
                await devChannel.send({ content: 'C√¢u h·ªèi 10: Bot BRB Studio c√≥ bao nhi√™u c√°ch thi·∫øt l·∫≠p l·ªùi ch√†o m·ª´ng th√†nh vi√™n m·ªõi tham gia m√°y ch·ªß', components: [buttonRow10] });

                const filter = interaction => interaction.customId.startsWith('q');
                const collector = devChannel.createMessageComponentCollector({ filter, time: 300000 }); // 1800000

                const userResponses = {}; // L∆∞u c√¢u tr·∫£ l·ªùi theo t·ª´ng ng∆∞·ªùi d√πng trong m·ªói m√°y ch·ªß

                collector.on('collect', async (interaction) => {
                    const guildId = guild.id;
                    const userId = interaction.user.id;
                    const displayName = interaction.member.displayName; // L·∫•y displayName c·ªßa ng∆∞·ªùi d√πng
                    // const questionId = interaction.customId.charAt(1); // '1', '2', '3', ƒë·ªÉ ph√¢n bi·ªát c√¢u h·ªèi
                    const questionId = interaction.customId.match(/\d+/)[0]; // L·∫•y ph·∫ßn s·ªë c·ªßa customId


                    // T·∫°o c·∫•u tr√∫c l∆∞u cho t·ª´ng m√°y ch·ªß n·∫øu ch∆∞a c√≥
                    if (!userResponses[guildId]) {
                        userResponses[guildId] = {};
                    }

                    // Ki·ªÉm tra n·∫øu ng∆∞·ªùi d√πng ƒë√£ tr·∫£ l·ªùi c√¢u h·ªèi n√†y trong m√°y ch·ªß hi·ªán t·∫°i ch∆∞a
                    if (!userResponses[guildId][userId]) {
                        userResponses[guildId][userId] = { displayName: displayName, responses: [] };
                    }

                    // Ki·ªÉm tra n·∫øu ng∆∞·ªùi d√πng ƒë√£ tr·∫£ l·ªùi c√¢u h·ªèi n√†y
                    if (userResponses[guildId][userId].responses.some(res => res.questionId === questionId)) {
                        return interaction.reply({ content: 'B·∫°n ƒë√£ tr·∫£ l·ªùi c√¢u h·ªèi n√†y r·ªìi.', ephemeral: true });
                    }

                    // X·ª≠ l√Ω c√¢u tr·∫£ l·ªùi
                    let status = 'Sai';
                    let responseMessage = '';
                    if (interaction.customId === 'q1_c' || interaction.customId === 'q2_b' || interaction.customId === 'q3_a' || interaction.customId === 'q4_e' || interaction.customId === 'q5_d' || interaction.customId === 'q6_a' || interaction.customId === 'q7_c' || interaction.customId === 'q8_b' || interaction.customId === 'q9_e' || interaction.customId === 'q10_a') {
                        status = 'ƒê√∫ng';
                    }

                    // Ph√¢n lo·∫°i ph·∫£n h·ªìi ri√™ng bi·ªát theo c√¢u h·ªèi v√† n√∫t ƒë√£ ch·ªçn
                    switch (interaction.customId) {
                        // C√¢u h·ªèi 1
                        case 'q1_c':
                            status = 'ƒê√∫ng';
                            responseMessage = 'C·∫£m ∆°n b·∫°n ƒë√£ th√≠ch c√°c l·ªánh prefix, ch√∫ng t√¥i s·∫Ω c√≥ c·∫≠p nh·∫≠t th√™m trong t∆∞∆°ng lai';
                            break;
                        case 'q1_a': case 'q1_b': case 'q1_d': case 'q1_e':
                            responseMessage = 'C·∫£m ∆°n b·∫°n ƒë√£ tham gia cu·ªôc kh·∫£o s√°t c√°c l·ªánh prefix, ch√∫ng t√¥i s·∫Ω c·∫£i thi·ªán trong t∆∞∆°ng lai';
                            break;

                        // C√¢u h·ªèi 2
                        case 'q2_b':
                            status = 'ƒê√∫ng';
                            responseMessage = 'C·∫£m ∆°n b·∫°n ƒë√£ th√≠ch l·ªánh /commands-bot, ch√∫ng t√¥i s·∫Ω c√≥ th√™m c√°c l·ªánh kh√°c trong t∆∞∆°ng lai';
                            break;
                        case 'q2_a': case 'q2_c': case 'q2_d': case 'q2_e':
                            responseMessage = 'C·∫£m ∆°n b·∫°n ƒë√£ tham gia cu·ªôc kh·∫£o s√°t l·ªánh /commands-bot, ch√∫ng t√¥i s·∫Ω c√≥ nh·ªØng thay ƒë·ªïi trong t∆∞∆°ng lai ƒë·ªÉ ph√π h·ª£p h∆°n';
                            break;

                        // C√¢u h·ªèi 3
                        case 'q3_a':
                            status = 'ƒê√∫ng';
                            responseMessage = 'C·∫£m ∆°n b·∫°n ƒë√£ th√≠ch l·ªánh l·ªánh /commands-new, ch√∫ng t√¥i s·∫Ω c√≥ th√™m c√°c l·ªánh kh√°c trong t∆∞∆°ng lai';
                            break;
                        case 'q3_b': case 'q3_c': case 'q3_d': case 'q3_e':
                            responseMessage = 'C·∫£m ∆°n b·∫°n ƒë√£ tham gia cu·ªôc kh·∫£o s√°t l·ªánh l·ªánh /commands-new, ch√∫ng t√¥i s·∫Ω c√≥ nh·ªØng thay ƒë·ªïi trong t∆∞∆°ng lai ƒë·ªÉ ph√π h·ª£p h∆°n';
                            break;
                        
                        // C√¢u h·ªèi 4
                        case 'q4_e':
                            status = 'ƒê√∫ng';
                            responseMessage = 'C·∫£m ∆°n b·∫°n ƒë√£ ƒë√°nh gi√° cao v·ªÅ /mail-box';
                            break;
                        case 'q4_a': case 'q4_b': case 'q4_c': case 'qd_e':
                            responseMessage = 'C·∫£m ∆°n b·∫°n ƒë√£ ƒë√°nh gi√° cao v·ªÅ /mail-box, ch√∫ng t√¥i s·∫Ω c√≥ xem x√©t k·∫øt qu·∫£ c·ªßa cu·ªôc kh·∫£o s√°t ƒë·ªÉ c·∫£i thi·ªán t·ªët h∆°n n·∫øu c·∫ßn';
                            break;

                        // C√¢u h·ªèi 5
                        case 'q5_d':
                            status = 'ƒê√∫ng';
                            responseMessage = 'C·∫£m ∆°n b·∫°n ƒë√£ th√≠ch c√°c game m√† bot BRB Studio c√≥, n·∫øu c√≥ game n√†o th√∫ v·ªã m√† kh√¥ng ƒë·ª•ng h√†ng c√≥ th·ªÉ d√πng l·ªánh \`\`\`/mailbox\`\`\` ƒë·ªÉ g·ª≠i v·ªÅ cho ch√∫ng t√¥i';
                            break;
                        case 'q5_a': case 'q5_b': case 'q5_c': case 'q5_e':
                            responseMessage = 'C·∫£m ∆°n b·∫°n ƒë√£ tham gia cu·ªôc kh·∫£o s√°t th√≠ch c√°c game m√† bot BRB Studio c√≥, ƒë√¢y l√† nh·ªØng game m√† m·ªçi bot tr√™n th·ªã tr∆∞·ªùng kh√¥ng c√≥, ch√∫ng t√¥i s·∫Ω ti·∫øp t·ª•c th√™m trong t∆∞∆°ng lai';
                            break;

                        // C√¢u h·ªèi 6
                        case 'q6_a':
                            status = 'ƒê√∫ng';
                            responseMessage = 'B·∫°n ƒë√£ tr·∫£ l·ªùi ƒë√∫ng r·ªìi, ƒë√¢y l√† cu·ªôc kh·∫£o s√°t ƒë·ªÉ ch√∫ng t√¥i c·∫£i thi·ªán bot t·ªët h∆°n trong t∆∞∆°ng lai';
                            break;
                        case 'q6_b': case 'q6_c': case 'q6_d': case 'q6_e':
                            responseMessage = 'L·ªánh `/game-iq l√† Tr√≤ ch∆°i ƒë·∫•u tr√≠ IQ, c√≥ v·∫ª nh∆∞ b·∫°n √≠t ch∆°i game n√†y nh·ªâ';
                            break;
                            
                        // C√¢u h·ªèi 7
                        case 'q7_c':
                            status = 'ƒê√∫ng';
                            responseMessage = 'ƒê√∫ng r·ªìi, l·ªánh `?qr` c√≥ 3 l·ªánh ph·ª• bao g·ªìm l·ªánh \`\`\`?qr setup\`\`\`: l∆∞u m√£ qr c·ªßa b·∫°n v√†o d·ªØ li·ªáu c·ªßa ch√∫ng t√¥i, \`\`\`?qr send\`\`\`: g·ª≠i m√£ qr cho m·ªçi ng∆∞·ªùi trong m√°y ch·ªß, \`\`\`?qr delete\`\`\`: x√≥a d·ªØ li·ªáu m√£ qr c≈© ƒë·ªÉ thay m√£ qr m·ªõi.';
                            break;
                        case 'q7_a': case 'q7_b': case 'q7_d': case 'q7_e':
                            responseMessage = 'Sai r·ªìi, l·ªánh `?qr` c√≥ 3 l·ªánh bao g·ªìm l·ªánh \`\`\`?qr setup\`\`\`: l∆∞u m√£ qr c·ªßa b·∫°n v√†o d·ªØ li·ªáu c·ªßa ch√∫ng t√¥i, \`\`\`?qr send\`\`\`: g·ª≠i m√£ qr cho m·ªçi ng∆∞·ªùi trong m√°y ch·ªß, \`\`\`?qr delete\`\`\`: x√≥a d·ªØ li·ªáu m√£ qr c≈© ƒë·ªÉ thay m√£ qr m·ªõi';
                            break;

                        // C√¢u h·ªèi 8
                        case 'q8_b':
                            status = 'ƒê√∫ng';
                            responseMessage = 'ƒê√∫ng r·ªìi, cu·ªôc kh·∫£o s√°t n√†y s·∫Ω gi√∫p bot c√≥ h∆∞·ªõng ƒëi t·ªët h∆°n trong t∆∞∆°ng lai';
                            break;
                        case 'q8_a': case 'q8_c': case 'q8_d': case 'q8_e':
                            responseMessage = 'Sai r·ªìi, ƒë·ªÉ ki·ªÉm tra phi√™n b·∫£n c·ªßa bot th√¨ d√πng l·ªánh \`\`\`/version-bot\`\`\`';
                            break;

                        // C√¢u h·ªèi 9
                        case 'q9_e':
                            status = 'ƒê√∫ng';
                            responseMessage = 'ƒê√∫ng r·ªìi, cu·ªôc kh·∫£o s√°t n√†y s·∫Ω gi√∫p bot c√≥ h∆∞·ªõng ƒëi t·ªët h∆°n trong t∆∞∆°ng lai';
                            break;
                        case 'q9_a': case 'q9_b': case 'q9_c': case 'q9_d':
                            responseMessage = 'Sai r·ªìi, v·ªõi l·ªánh \`\`\`/mail-box\`\`\` b·∫°n c√≥ th·ªÉ g·ª≠i ph·∫£n h·ªìi v·ªÅ bot nh∆∞ l·ªói, ƒë√≥ng g√≥p √Ω ki·∫øn...v.v, v·ªÅ cho ch√∫ng t√¥i, v√† ch√∫ng t√¥i s·∫Ω xem x√©t ƒë·ªÉ gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ m√† b·∫°n ƒë·ªÅ c·∫≠p trong th·ªùi gian s·ªõm nh·∫•t.';
                            break;

                        // C√¢u h·ªèi 10
                        case 'q10_a':
                            status = 'ƒê√∫ng';
                            responseMessage = 'ƒê√∫ng r·ªìi, cu·ªôc kh·∫£o s√°t n√†y s·∫Ω gi√∫p bot c√≥ h∆∞·ªõng ƒëi t·ªët h∆°n trong t∆∞∆°ng lai. N·∫øu b·∫°n mu·ªën ƒë√≥ng g√≥p √Ω ki·∫øn c√≥ th·ªÉ d√πng l·ªánh \`\`\`/mailbox\`\`\`';
                            break;
                        case 'q10_b': case 'q10_c': case 'q10_d': case 'q10_e':
                            responseMessage = 'Sai r·ªìi, bot **BRB Studio** c√≥ 3 c√°ch thi·∫øt l·∫≠p l·ªùi ch√†o m·ª´ng th√†nh vi√™n m·ªõi tham gia m√°y ch·ªß, b·∫°n c√≥ th·ªÉ d√πng l·ªánh \`\`\`/welcome-default\`\`\` ho·∫∑c \`\`\`/welcome-default\`\`\`/welcome-setup\`\`\`';
                            break;

                        default:
                            responseMessage = 'Ph·∫£n h·ªìi kh√¥ng x√°c ƒë·ªãnh, vui l√≤ng th·ª≠ l·∫°i!';
                    }

                    // L∆∞u c√¢u tr·∫£ l·ªùi c·ªßa ng∆∞·ªùi d√πng
                    userResponses[guildId][userId].responses.push({
                        questionId: questionId, // L∆∞u ID c√¢u h·ªèi
                        question: interaction.message.content,
                        answer: interaction.customId,
                        status: status
                    });

                    await interaction.reply({ content: responseMessage, ephemeral: true }); // status === 'ƒê√∫ng' ? 'C√¢u tr·∫£ l·ªùi c·ªßa b·∫°n l√† ch√≠nh x√°c!' : 'C√¢u tr·∫£ l·ªùi c·ªßa b·∫°n kh√¥ng ƒë√∫ng!'
                });

                collector.on('end', async () => {

                    // Chu·∫©n b·ªã d·ªØ li·ªáu ƒë·ªÉ l∆∞u v√†o MongoDB
                    for (const [guildId, users] of Object.entries(userResponses)) {
                        for (const [userId, userData] of Object.entries(users)) {
                            const correctCount = userData.responses.filter(r => r.status === 'ƒê√∫ng').length;
                    
                            // L∆∞u m·ªói ng∆∞·ªùi d√πng v·ªõi th√¥ng tin chi ti·∫øt v·ªÅ c√¢u tr·∫£ l·ªùi trong m√°y ch·ªß hi·ªán t·∫°i
                            await KsModel.create({
                                guildId: guildId,
                                guildName: guild.name,
                                userId: userId,
                                displayName: userData.displayName, // L∆∞u displayName
                                correctAnswers: correctCount,
                                questions: userData.responses
                            });
                        }
                    }
                    // devChannel.send(`Kh·∫£o s√°t ƒë√£ k·∫øt th√∫c! ƒê√£ thu th·∫≠p ${Object.keys(userResponses[guild.id] || {}).length} ng∆∞·ªùi tham gia trong m√°y ch·ªß n√†y.`);

                });
                
                // Ch·ªù 2 ph√∫t tr∆∞·ªõc khi x√≥a k√™nh
                setTimeout(async () => {
                    await devChannel.delete().catch(console.error); // X√≥a k√™nh sau 2 ph√∫t
                }, 2 * 60 * 1000); // 3 ng√†y.... c√≤n 2 ph√∫t = 2 * 60 * 1000 ms
            }
        }

    },
};
