const { EmbedBuilder } = require('discord.js');
const EconomySystem = require('../../schemas/economySystem');
const FishingRod = require('../../schemas/FishingRodSchema');
const moment = require('moment-timezone');

/*
THU√ä c·∫ßn c√¢u
*/

module.exports = {
    name: 'FishingRod',
    description: `\`üî∏ L·ªÜNH D√ÄNH CHO DEV\``, // Thu√™ c·∫ßn c√¢u
    hd: `\`üî∏ C√°ch d√πng: Kh√¥ng c√≥ th√¥ng tin\``,
    q: `\`üî∏ D√†nh cho DEV\``,
    aliases: ['mcc'],

    /*
    ?FishingRod rainbow 3
    ?FishingRod whiteshark 5
    */

    // L·ªánh gi√∫p ƒë·ª°
    async help(msg) {
        const embed = new EmbedBuilder()
            .setColor('Blue')
            .setTitle('H∆Ø·ªöNG D·∫™N MUA C·∫¶N C√ÇU')
            .setDescription(
                `C√≥ 3 lo·∫°i c·∫ßn c√¢u l√†:\n` +
                `- C·∫ßn c√¢u **RainBow**\n` +
                `- C·∫ßn c√¢u **WhiteShark**\n` +
                `- C·∫ßn c√¢u **DragonWrath**`
            )
            .addFields(
                { 
                    name: 'C√°ch Mua', 
                    value: `\`\`\`FishingRod <t√™n c·∫ßn c√¢u> <s·ªë l∆∞·ª£ng c·∫ßn mua>\`\`\``, 
                    inline: false 
                },

                { 
                    name: '\u200b', 
                    value: `\u200b`, 
                    inline: false 
                },

                { 
                    name: 'B·∫£ng Gi√°', 
                    value: `\u200b`, 
                    inline: false 
                },
                
                { 
                    name: 'C·∫ßn c√¢u **RainBow** ( 3 l∆∞·ª£t d√πng )', 
                    value: `10000 <a:xu:1320563128848744548>`, 
                    inline: false 
                },

                { 
                    name: 'C·∫ßn c√¢u **WhiteShark** ( 7 l∆∞·ª£t d√πng )', 
                    value: `30000 <a:xu:1320563128848744548>`, 
                    inline: false 
                },

                { 
                    name: 'C·∫ßn c√¢u **DragonWrath** ( 18 l∆∞·ª£t d√πng )', 
                    value: `70000 <a:xu:1320563128848744548>`, 
                    inline: false 
                }
            )
            .setFooter({ text: 'C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng l·ªánh!' })
            .setTimestamp();

        msg.channel.send({ embeds: [embed] });
    },

    async execute(msg, args) {
        try {

            if (args[0] === 'help' || args.length === 0) {
                return this.help(msg); // Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n n·∫øu c√≥ l·ªánh help
            }

            // Ki·ªÉm tra xem ng∆∞·ªùi d√πng ƒë√£ nh·∫≠p ƒë·ªß tham s·ªë
            if (args.length < 2) {
                return msg.channel.send('B·∫°n c·∫ßn nh·∫≠p t√™n c·∫ßn c√¢u v√† s·ªë l∆∞·ª£ng (v√≠ d·ª•: `FishingRod rainbow 3`).');
            }

            const rodName = args[0].toLowerCase(); // T√™n c·∫ßn c√¢u (chuy·ªÉn v·ªÅ ch·ªØ th∆∞·ªùng ƒë·ªÉ d·ªÖ so s√°nh)
            const quantity = parseInt(args[1]); // S·ªë l∆∞·ª£ng mua

            // Ki·ªÉm tra s·ªë l∆∞·ª£ng h·ª£p l·ªá
            if (isNaN(quantity) || quantity <= 0) {
                return msg.channel.send('S·ªë l∆∞·ª£ng ph·∫£i l√† m·ªôt s·ªë l·ªõn h∆°n 0.');
            }

            // C√°c lo·∫°i c·∫ßn c√¢u v√† gi√° t∆∞∆°ng ·ª©ng
            const rodPrices = {
                RainBow: 5000,
                WhiteShark: 30000,
                DragonWrath: 70000
            };

            // Ki·ªÉm tra lo·∫°i c·∫ßn c√¢u c√≥ h·ª£p l·ªá kh√¥ng
            if (!rodPrices[rodName]) {
                return msg.channel.send('Lo·∫°i c·∫ßn c√¢u kh√¥ng h·ª£p l·ªá! Lo·∫°i c·∫ßn c√¢u b·∫°n c√≥ th·ªÉ mua: **RainBow**, **WhiteShark**, **DragonWrath**.');
            }

            const pricePerRod = rodPrices[rodName]; // Gi√° c·ªßa 1 c·∫ßn c√¢u
            const totalPrice = pricePerRod * quantity; // T·ªïng gi√° ti·ªÅn

            // L·∫•y th√¥ng tin t·ª´ MongoDB EconomySystem
            const economyData = await EconomySystem.findOne({ Guild: msg.guild.id, User: msg.author.id });

            if (!economyData) {
                return msg.channel.send('B·∫°n ch∆∞a tham gia h·ªá th·ªëng kinh t·∫ø. Vui l√≤ng tham gia tr∆∞·ªõc khi mua.');
            }

            // Ki·ªÉm tra ng∆∞·ªùi d√πng c√≥ ƒë·ªß ti·ªÅn kh√¥ng
            if (economyData.Wallet < totalPrice) {
                return msg.channel.send('B·∫°n kh√¥ng c√≥ ƒë·ªß <a:xu:1320563128848744548> ƒë·ªÉ mua s·ªë l∆∞·ª£ng n√†y.');
            }

            // L∆∞u th√¥ng tin v√†o MongoDB FishingRodSchema
            const currentTime = moment().tz('Asia/Ho_Chi_Minh').format('DD/MM/YYYY HH:mm:ss');  // L·∫•y th·ªùi gian hi·ªán t·∫°i theo m√∫i gi·ªù VN

            const newFishingRod = new FishingRod({
                guildName: msg.guild.name,
                guildId: msg.guild.id,
                displayName: msg.member.displayName,
                userId: msg.author.id,
                rodName: rodName,
                quantity: quantity,
                purchaseTime: currentTime,
                totalPrice: totalPrice
            });

            await newFishingRod.save();  // L∆∞u v√†o c∆° s·ªü d·ªØ li·ªáu MongoDB

            // Tr·ª´ ti·ªÅn v√†o Wallet c·ªßa ng∆∞·ªùi d√πng
            economyData.Wallet -= totalPrice;
            await economyData.save();

            // G·ª≠i th√¥ng b√°o cho ng∆∞·ªùi d√πng
            const embed = new EmbedBuilder()
                .setColor('Green')
                .setTitle('Mua C·∫ßn C√¢u Th√†nh C√¥ng')
                .addFields(
                    { name: 'Ng∆∞·ªùi Mua', value: msg.member.displayName, inline: true },
                    { name: 'T√™n C·∫ßn C√¢u', value: rodName, inline: true },
                    { name: 'S·ªë L∆∞·ª£ng', value: quantity.toString(), inline: true },
                    { name: 'T·ªïng Gi√° Ti·ªÅn', value: `${totalPrice} <a:xu:1320563128848744548>`, inline: true },
                    { name: 'Th·ªùi Gian Mua', value: currentTime, inline: false }
                )
                .setFooter({ text: 'C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng d·ªãch v·ª•!' });

            msg.channel.send({ embeds: [embed] });

        } catch (error) {
            console.error(error);
            msg.channel.send('ƒê√£ x·∫£y ra l·ªói trong qu√° tr√¨nh th·ª±c hi·ªán l·ªánh.');
        }
    }
};
