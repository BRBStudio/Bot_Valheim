const { SlashCommandBuilder, EmbedBuilder, PermissionsBitField} = require('discord.js');
const revSchema = require('../../schemas/reviewSchema');
const config = require(`../../config`)
const CommandStatus = require('../../schemas/Command_Status');

module.exports = {
    data: new SlashCommandBuilder()
    .setName('rate_server')
    .setDescription('üîπ L·ªánh ƒë√°nh gi√° m√°y ch·ªß')
    .addSubcommand(command => command.setName('setup').setDescription('üîπ Thi·∫øt l·∫≠p h·ªá th·ªëng ƒë√°nh gi√°').addChannelOption(option => option.setName('channel').setDescription('K√™nh n∆°i c√°c b√†i ƒë√°nh gi√° s·∫Ω ƒë∆∞·ª£c ƒëƒÉng').setRequired(true)))
    .addSubcommand(command => command.setName('disable').setDescription('üîπ V√¥ hi·ªáu h√≥a h·ªá th·ªëng ƒë√°nh gi√°'))
    .addSubcommand(command => command.setName('rating').setDescription('üîπ ƒê·ªÉ l·∫°i ƒë√°nh gi√° cho m√°y ch·ªß c·ªßa ch√∫ng t√¥i').addStringOption(option => option.setName('stars').setDescription('S·ªë sao b·∫Øt ƒë·∫ßu b·∫°n ƒë·ªÉ l·∫°i cho ch√∫ng t√¥i').addChoices(
        { name: "‚≠ê", value: "‚≠ê" },
        { name: "‚≠ê‚≠ê", value: "‚≠ê‚≠ê" },
        { name: "‚≠ê‚≠ê‚≠ê", value: "‚≠ê‚≠ê‚≠ê" },
        { name: "‚≠ê‚≠ê‚≠ê‚≠ê", value: "‚≠ê‚≠ê‚≠ê‚≠ê" },
        { name: "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê", value: "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê" }
    ).setRequired(true)).addStringOption(option => option.setName('description').setDescription('ƒê·ªÉ l·∫°i l·ªùi nh·∫≠n x√©t c·ªßa b·∫°n').setRequired(false))),

    async execute(interaction) {

        // Ki·ªÉm tra tr·∫°ng th√°i c·ªßa l·ªánh
        const commandStatus = await CommandStatus.findOne({ command: '/rate_server' });

        // N·∫øu l·ªánh ƒëang t·∫Øt, g·ª≠i th√¥ng b√°o v√† kh√¥ng th·ª±c hi·ªán l·ªánh
        if (commandStatus && commandStatus.status === 'off') {
            return interaction.reply('L·ªánh n√†y ƒë√£ b·ªã t·∫Øt, vui l√≤ng th·ª≠ l·∫°i sau.');
        }
        
        const sub = interaction.options.getSubcommand();
        const data = await revSchema.findOne({ Guild: interaction.guild.id});

        switch(sub) {
            case 'setup':

                if(!interaction.member.permissions.has(PermissionsBitField.Flags.Administrator)) 
                    return await interaction.reply ({ 
                            content: `‚õî | B·∫°n kh√¥ng c√≥ quy·ªÅn thi·∫øt l·∫≠p h·ªá th·ªëng ƒë√°nh gi√°`, 
                            ephemeral: true 
                        })

                if(data) return await interaction.reply({ content: `‚ùå | B·∫°n ƒë√£ thi·∫øt l·∫≠p h·ªá th·ªëng!`, ephemeral: true })
                else {
                    const channel = interaction.options.getChannel('channel')

                    await revSchema.create({
                        Guild: interaction.guild.id,
                        Channel: channel.id
                    });

                    await interaction.reply({ content: `‚úÖ | H·ªá th·ªëng ƒë√°nh gi√° ƒë√£ ƒë∆∞·ª£c thi·∫øt l·∫≠p`, ephemeral: true})
                }
            break;

            case 'disable':
                if(!interaction.member.permissions.has(PermissionsBitField.Flags.Administrator)) 
                    return await interaction.reply ({ 
                            content: `‚õî | B·∫°n kh√¥ng c√≥ quy·ªÅn thi·∫øt l·∫≠p h·ªá th·ªëng ƒë√°nh gi√°`, 
                            ephemeral: true 
                        })

                if(!data) return await interaction.reply({ content: `‚ùå | B·∫°n ƒë√£ thi·∫øt l·∫≠p h·ªá th·ªëng!`, ephemeral: true})

                else {
                    await revSchema.deleteOne({ Guild: interaction.guild.id });
                    await interaction.reply({ content: `‚úÖ | H·ªá th·ªëng ƒë√°nh gi√° ƒë√£ b·ªã v√¥ hi·ªáu h√≥a.`, ephemeral: true });
                }
                
            break;

            case 'rating':
                
                if (!data) return await interaction.reply({ content: `‚ùå | H·ªá th·ªëng ƒë√°nh gi√° ch∆∞a ƒë∆∞·ª£c thi·∫øt l·∫≠p! `, ephemeral: true });
                else if (data) {

                    const channelID = data.Channel;
                    const stars = interaction.options.getString("stars");
                    const description = interaction.options.getString("description")|| 'Kh√¥ng c√≥ l·ªùi nh·∫≠n x√©t.';;
                    const channel = interaction.guild.channels.cache.get(channelID);
                    const member = interaction.guild.members.cache.get(interaction.user.id)?.displayName || interaction.user.username;


                    const embed1 = new EmbedBuilder()
                    .setColor(config.embedBlurple)
                    .setTitle(`ƒê√ÅNH GI√Å T·ª™ ${member.toUpperCase()}`)
                    .addFields(
                        { name: "__ƒê√°nh gi√° c·ªßa ng∆∞·ªùi d√πng:__", value: `${stars}`, inline: true },
                        { name: "__Nh·∫≠n x√©t c·ªßa ng∆∞·ªùi d√πng:__", value: `${description}\n` },
                        )
                    .setTimestamp()
                    .setImage(`https://i.imgur.com/4DN7BGe.gif`)
    
                    const embed2 = new EmbedBuilder()
                    .setColor(config.embedBlurple)
                    .setDescription(`ƒê√°nh gi√° c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng ${channel}`)
                    .setTimestamp()
                    .setImage(`https://i.imgur.com/4DN7BGe.gif`)
    
                    channel.send({ embeds: [embed1] });
                    
                    return interaction.reply({ embeds: [embed2], ephemeral: true });

                }
        }
    }
}

