const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const { createIdEmbed } = require(`../../Embeds/embedsCreate`);

const CommandStatus = require('../../schemas/Command_Status');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('id')
        .setDescription('üîπ ID ng∆∞·ªùi d√πng')
        .addUserOption(option => 
            option.setName('user')
                .setDescription('Ch·ªçn ng∆∞·ªùi d√πng ƒë·ªÉ l·∫•y ID c·ªßa h·ªç')),
    async execute(interaction) {

        // Ki·ªÉm tra tr·∫°ng th√°i c·ªßa l·ªánh
        const commandStatus = await CommandStatus.findOne({ command: '/id' });

        // N·∫øu l·ªánh ƒëang t·∫Øt, g·ª≠i th√¥ng b√°o v√† kh√¥ng th·ª±c hi·ªán l·ªánh
        if (commandStatus && commandStatus.status === 'off') {
            return interaction.reply('L·ªánh n√†y ƒë√£ b·ªã t·∫Øt, vui l√≤ng th·ª≠ l·∫°i sau.');
        }


        // L·∫•y ng∆∞·ªùi d√πng ƒë∆∞·ª£c ch·ªçn t·ª´ t√πy ch·ªçn (n·∫øu c√≥), n·∫øu kh√¥ng th√¨ l·∫•y ng∆∞·ªùi g·ª≠i l·ªánh
        const user = interaction.options.getUser('user') || interaction.user;

        const embed = createIdEmbed(user)
        
        await interaction.deferReply();
        await interaction.deleteReply();

        await interaction.channel.send({ embeds: [embed] });
    },
};