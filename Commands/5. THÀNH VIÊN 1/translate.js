const { SlashCommandBuilder, ActionRowBuilder, PermissionFlagsBits, EmbedBuilder, ButtonBuilder } = require('discord.js');
const { translate_tiengviet, translate_tienganh, translate_cancel } = require('../../ButtonPlace/ButtonBuilder');
const CommandStatus = require('../../schemas/Command_Status');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('translate')
        .setDescription('üîπ D·ªãch ng√¥n ng·ªØ.'),
        // .setDefaultMemberPermissions(PermissionFlagsBits.Administrator),

    async execute(interaction) {

        // Ki·ªÉm tra tr·∫°ng th√°i c·ªßa l·ªánh
        const commandStatus = await CommandStatus.findOne({ command: '/translate' });

        // N·∫øu l·ªánh ƒëang t·∫Øt, g·ª≠i th√¥ng b√°o v√† kh√¥ng th·ª±c hi·ªán l·ªánh
        if (commandStatus && commandStatus.status === 'off') {
            return interaction.reply('L·ªánh n√†y ƒë√£ b·ªã t·∫Øt, vui l√≤ng th·ª≠ l·∫°i sau.');
        }

        const actionRow = new ActionRowBuilder().addComponents(translate_tiengviet, translate_tienganh, translate_cancel);

        const time = new EmbedBuilder()
                        .setColor(`Green`)
                        .setTitle("<a:translate:1335358840790581280> Ch·ªçn ng√¥n ng·ªØ b·∫°n mu·ªën d·ªãch!")
                        .setTimestamp()
                        .setFooter({ text: `Ch√∫c b·∫°n 1 ng√†y t·ªët l√†nh t·∫°i ***${interaction.guild.name}***` });

        if (!interaction.deferred && !interaction.replied) {
            await interaction.reply({
                // content: 'üåê Ch·ªçn ng√¥n ng·ªØ b·∫°n mu·ªën d·ªãch!',
                components: [actionRow],
                embeds: [time],
                ephemeral: true
            });
        }
    },
};