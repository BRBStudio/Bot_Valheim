const { SlashCommandBuilder, ActionRowBuilder, ButtonStyle, ButtonBuilder  } = require("discord.js");
const PollCord = require("pollcord");
const pollcord = PollCord.ShockBS
const CommandStatus = require('../../schemas/Command_Status');

module.exports = {
    data: new SlashCommandBuilder()
        .setName("poll")
        .setDescription("üîπ T·∫°o m·ªôt cu·ªôc thƒÉm d√≤ c·∫•p th·∫•p")
        // .setDescriptionLocalizations({"en-US": 'i love'})
        .addStringOption(o => o
            .setName("question")
            .setDescription("C√¢u h·ªèi cho cu·ªôc thƒÉm d√≤ √Ω ki·∫øn")
            .setRequired(true))
        .addStringOption(o => o
            .setName("answers")
            .setDescription("Danh s√°ch c√¢u tr·∫£ l·ªùi ƒë∆∞·ª£c ph√¢n t√°ch b·∫±ng d·∫•u ph·∫©y cho cu·ªôc thƒÉm d√≤ √Ω ki·∫øn")
            .setRequired(true))
        .addStringOption(o => o
            .setName("duration")
            .setDescription("Th·ªùi gian c·ªßa cu·ªôc thƒÉm d√≤ t√≠nh b·∫±ng gi·ªù, t·ªëi ƒëa l√† 48h")
            .setRequired(false)),
  
    async execute(interaction, client) {

        try {

                // Ki·ªÉm tra tr·∫°ng th√°i c·ªßa l·ªánh
                const commandStatus = await CommandStatus.findOne({ command: '/poll' });

                // N·∫øu l·ªánh ƒëang t·∫Øt, g·ª≠i th√¥ng b√°o v√† kh√¥ng th·ª±c hi·ªán l·ªánh
                if (commandStatus && commandStatus.status === 'off') {
                    return interaction.reply('L·ªánh n√†y ƒë√£ b·ªã t·∫Øt, vui l√≤ng th·ª≠ l·∫°i sau.');
                }

                const question = interaction.options.getString("question");
                const answers = interaction.options.getString("answers").split(",");
                const duration = parseInt(interaction.options.getString("duration")) || 7;

                // Ki·ªÉm tra n·∫øu th·ªùi gian kh√¥ng n·∫±m trong kho·∫£ng t·ª´ 1 gi·ªù ƒë·∫øn 7 ng√†y
                if (duration < 1 || duration > 48) {
                    return interaction.reply(`\`\`\`yml\nüö´ B√ÅO L·ªñI üö´\n\nTh·ªùi gian c·ªßa cu·ªôc thƒÉm d√≤ t·ªëi thi·ªÉu l√† 1h v√† t·ªëi ƒëa l√† 48h.\`\`\``);
                }

                // X√°c nh·∫≠n ƒë√£ ph·∫£n h·ªìi nh∆∞ng kh√¥ng g·ª≠i b·∫•t k·ª≥ tin nh·∫Øn n√†o
              await interaction.deferReply({ ephemeral: true });

              
                pollcord(interaction.client, interaction.channelId, { 
                  question: question, 
                  answers: answers.map(answer => ({ text: answer.trim(), emoji: "" })), 
                  duration: duration, 
                  multiSelect: false
                }, { 
                  content: "@everyone h√£y b·ªè phi·∫øu cho cu·ªôc thƒÉm d√≤ √Ω ki·∫øn n√†y. C·∫£m ∆°n!", 
                  // embeds: [new EmbedBuilder().setColor("Blurple").setDescription("PollCord")], 
                  components: [
                    new ActionRowBuilder().addComponents(
                      new ButtonBuilder({
                        style: ButtonStyle.Link, 
                        label: "M√°y ch·ªß h·ªó tr·ª£", 
                        url: "https://discord.com/channels/1028540923249958912/1028540923761664042", 
                        emoji: `<:ech7:1234014842004705360>`
                      }),
                      
                      new ButtonBuilder({
                        style: ButtonStyle.Link, 
                        label: "Web", 
                        url: "https://www.npmjs.com/package/pollcord", 
                        emoji: `<:iunhythncht:1234012514040418305>`,
                        disabled: true
                      })
                  )
                ]
              });
                

                // pollcord(client, interaction.channelId, pollOptions);

                // return interaction.reply({ content: "ƒê√£ g·ª≠i cu·ªôc thƒÉm d√≤ √Ω ki·∫øn!", ephemeral: true });
                // X√≥a ph·∫£n h·ªìi ngay l·∫≠p t·ª©c
                await interaction.deleteReply();

            } catch (error) {
            console.error("C√≥ l·ªói x·∫£y ra:", error);
            // G·ª≠i tin nh·∫Øn l·ªói cho ng∆∞·ªùi d√πng
            return interaction.reply(`\`\`\`yml\nT·ªëi ƒëa l√† 48 ti·∫øng\`\`\``);
            }
    }
};