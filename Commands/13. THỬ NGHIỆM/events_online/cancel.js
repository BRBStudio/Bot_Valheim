const { SlashCommandSubcommandBuilder } = require('discord.js');

module.exports = {
	data: new SlashCommandSubcommandBuilder()
		.setName('cancel')
		.setDescription('Hu·ª∑ m·ªôt s·ª± ki·ªán ƒë√£ t·∫°o')
		.addStringOption(o => o
			.setName('tensukien')
			.setDescription('T√™n s·ª± ki·ªán c·∫ßn hu·ª∑')
			.setRequired(true))
		.addStringOption(o => o
			.setName('thoigian')
			.setDescription('Th·ªùi gian s·ª± ki·ªán, ghi r√µ gi·ªù v√† ng√†y theo ƒë√∫ng ƒë·ªãnh d·∫°ng (vd: 01:24 16-05-2025 ho·∫∑c 1:24 16-5-2025)')
			.setRequired(true)),

	async execute(interaction) {

		// if (!interaction.guild.features.includes('COMMUNITY')) {
		// 	return interaction.reply({
		// 		content: '‚ùå M√°y ch·ªß n√†y ch∆∞a b·∫≠t t√≠nh nƒÉng **C·ªông ƒë·ªìng** n√™n kh√¥ng th·ªÉ t·∫°o s·ª± ki·ªán. B·∫°n c√≥ th·ªÉ b·∫≠t t·∫°i: **Server Settings > Enable Community** ( c√†i ƒë·∫∑t m√°y ch·ªß > K√≠ch ho·∫°t c·ªông ƒë·ªìng ).',
		// 		ephemeral: true,
		// 	});
		// }

		const name = interaction.options.getString('tensukien');
		const timeStr = interaction.options.getString('thoigian');

		const timeRegex = /^(\d{1,2}):(\d{1,2}) (\d{1,2})[-\/](\d{1,2})[-\/](\d{4})$/;
		const match = timeStr.match(timeRegex);

		if (!match) {
			return interaction.reply({
				content: '‚ùå ƒê·ªãnh d·∫°ng th·ªùi gian kh√¥ng h·ª£p l·ªá. D√πng ƒë·ªãnh d·∫°ng: `00:24 16-05-2025`',
				ephemeral: true,
			});
		}

		const [, hour, minute, day, month, year] = match.map(Number);
		const targetTime = new Date(year, month - 1, day, hour, minute);

		await interaction.deferReply({ ephemeral: true }); // üëà GI·ªÆ phi√™n interaction

		try {
			const events = await interaction.guild.scheduledEvents.fetch();

			const eventToCancel = events.find(ev =>
				ev.name === name &&
				ev.scheduledStartAt?.getTime() === targetTime.getTime()
			);

			if (!eventToCancel) {
				return interaction.editReply({
				content: '‚ùå Kh√¥ng t√¨m th·∫•y s·ª± ki·ªán kh·ªõp v·ªõi t√™n v√† th·ªùi gian b·∫°n cung c·∫•p.',
				});
			}

			await eventToCancel.delete(`Hu·ª∑ b·ªüi /cancel_brb c·ªßa ${interaction.user.tag}`);

			await interaction.editReply(`‚úÖ ƒê√£ hu·ª∑ s·ª± ki·ªán **${eventToCancel.name}** b·∫Øt ƒë·∫ßu l√∫c <t:${Math.floor(targetTime.getTime() / 1000)}:F>`);
		} catch (err) {
			console.error('L·ªói khi hu·ª∑ s·ª± ki·ªán:', err);
			await interaction.editReply({
				content: '‚ùå C√≥ l·ªói x·∫£y ra khi hu·ª∑ s·ª± ki·ªán. H√£y ki·ªÉm tra l·∫°i quy·ªÅn bot v√† ƒë·∫ßu v√†o.',
			});
		}
	},
};
