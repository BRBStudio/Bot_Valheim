// const { SlashCommandBuilder, EmbedBuilder, AttachmentBuilder } = require("discord.js");
// const QRCode = require('qrcode');
// const CommandStatus = require('../../schemas/Command_Status');
// const { writeFile, unlink, existsSync, mkdirSync } = require("fs");
// const path = require("path");

// // ƒê·ªãnh nghƒ©a th∆∞ m·ª•c l∆∞u tr·ªØ QR
// const qrStoragePath = path.join(__dirname, "../../Th∆∞ m·ª•c l∆∞u m√£ QR kh√¥ng ƒë∆∞·ª£c x√≥a");

// // T·∫°o th∆∞ m·ª•c n·∫øu ch∆∞a c√≥
// if (!existsSync(qrStoragePath)) {
//     mkdirSync(qrStoragePath, { recursive: true });
// }

// module.exports = {
//     data: new SlashCommandBuilder()
//         .setName("qk")
//         .setDescription("üîπ L∆∞u d·ªØ li·ªáu Qr v√† g·ª≠i Qr")
//         .addSubcommand(c => c
//             .setName("setup")
//             .setDescription("üîπ L∆∞u d·ªØ li·ªáu m√£ QR")
//             .addAttachmentOption(o => o
//                 .setName("image")
//                 .setDescription("H√¨nh ·∫£nh QR b·∫°n mu·ªën l∆∞u.")
//                 .setRequired(true)))
//         .addSubcommand(c => c
//             .setName("send")
//             .setDescription("üîπ G·ª≠i m√£ QR c·ªßa b·∫°n trong k√™nh hi·ªán t·∫°i"))
//         .addSubcommand(c => c
//             .setName("creat")
//             .setDescription("üîπ T·∫°o m√£ QR t·ª´ m·ªôt ƒë∆∞·ªùng link v√† l∆∞u v√†o h·ªá th·ªëng")
//             .addStringOption(o => o
//                 .setName("link")
//                 .setDescription("Link b·∫°n mu·ªën chuy·ªÉn th√†nh m√£ QR")
//                 .setRequired(true))),
//     guildSpecific: true,
//     guildId: ['1319809040032989275', '1312185401347407902', '1319947820991774753'],

//     async execute(interaction) {
//         const subCommand = interaction.options.getSubcommand();

//         // Ki·ªÉm tra tr·∫°ng th√°i c·ªßa l·ªánh
//         const commandStatus = await CommandStatus.findOne({ command: "/qr" });
//         if (commandStatus && commandStatus.status === "off") {
//             return interaction.reply({ content: "L·ªánh n√†y ƒë√£ b·ªã t·∫Øt, vui l√≤ng th·ª≠ l·∫°i sau.", ephemeral: true });
//         }

//         if (subCommand === "setup") {
//             const imageURL = interaction.options.getAttachment("image");

//             // Ki·ªÉm tra n·∫øu file l√† ·∫£nh ƒë·ªông (GIF)
//             const imageType = imageURL.contentType; // V√≠ d·ª•: "image/png", "image/gif", ...
//             if (imageType && imageType.startsWith("image/gif")) {
//                 return interaction.reply({ content: "‚ùå Ch√∫ng t√¥i kh√¥ng ch·∫•p nh·∫≠n ·∫£nh ƒë·ªông (GIF). Vui l√≤ng ch·ªçn ·∫£nh tƒ©nh.", ephemeral: true });
//             }

//             const filePath = path.join(qrStoragePath, `${interaction.user.id}.png`);

//             try {
//                 // D√πng fetch ƒë·ªÉ t·∫£i ·∫£nh v·ªÅ
//                 const response = await fetch(imageURL.url);
//                 const arrayBuffer = await response.arrayBuffer();
//                 const buffer = Buffer.from(arrayBuffer);

//                 // L∆∞u file v√†o th∆∞ m·ª•c
//                 await writeFile(filePath, buffer, (err) => {
//                     if (err) throw err;
//                 });

//                 interaction.reply("üì• M√£ QR c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c l∆∞u th√†nh c√¥ng v√†o h·ªá th·ªëng!");
//             } catch (err) {
//                 console.error(err);
//                 interaction.reply({ content: "‚ùå ƒê√£ x·∫£y ra l·ªói khi l∆∞u th√¥ng tin. Vui l√≤ng th·ª≠ l·∫°i sau.", ephemeral: true });
//             }

//         } else if (subCommand === "send") {
//             const filePath = path.join(qrStoragePath, `${interaction.user.id}.png`);

//             if (!existsSync(filePath)) {
//                 return interaction.reply({ content: "‚ùå Kh√¥ng t√¨m th·∫•y m√£ QR c·ªßa b·∫°n. H√£y s·ª≠ d·ª•ng l·ªánh `/qk setup` ho·∫∑c `/qk creat` ƒë·ªÉ t·∫°o l·∫°i.", ephemeral: true });
//             }

//             const attachment = new AttachmentBuilder(filePath, { name: "qrcode.png" });
//             const embed = new EmbedBuilder()
//                 .setColor("Green")
//                 .setTitle(`üí≥ H√ÉY CHUY·ªÇN KHO·∫¢N V√ÄO ƒê√ÇY CHO ${interaction.user.displayName.toUpperCase()}`)
//                 .setImage("attachment://qrcode.png")
//                 .setFooter({ text: "‚ö†Ô∏è ƒê·ªÉ ƒë·∫£m b·∫£o an to√†n, h√£y x√°c minh t√†i kho·∫£n tr∆∞·ªõc khi giao d·ªãch." })
//                 .setTimestamp();

//             interaction.reply({ embeds: [embed], files: [attachment] });

//         } else if (subCommand === "creat") {
//             const link = interaction.options.getString("link");
//             const filePath = path.join(qrStoragePath, `${interaction.user.id}.png`);

//             try {
//                 await interaction.deferReply();
//                 const qrBuffer = await QRCode.toBuffer(link, { errorCorrectionLevel: "H" });

//                 await writeFile(filePath, qrBuffer, (err) => {
//                     if (err) throw err;
//                 });

//                 const attachment = new AttachmentBuilder(filePath, { name: "qrcode.png" });
//                 interaction.followUp({ content: "‚úÖ M√£ QR c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c t·∫°o v√† l∆∞u v√†o h·ªá th·ªëng!", files: [attachment] });
//             } catch (err) {
//                 console.error(err);
//                 interaction.reply({ content: "‚ùå ƒê√£ x·∫£y ra l·ªói khi t·∫°o m√£ QR. Vui l√≤ng th·ª≠ l·∫°i sau.", ephemeral: true });
//             }
//         }
//     }
// };
