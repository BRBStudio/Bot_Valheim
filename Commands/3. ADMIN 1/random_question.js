const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const { randomquestionembed } = require(`../../Embeds/embedsDEV`)
const { checkAdministrator } = require(`../../permissionCheck`)
const CommandStatus = require('../../schemas/Command_Status');
const config = require(`../../config`)

module.exports = {
    data: new SlashCommandBuilder()
    .setName('random_question')
    .setDescription('üîπ G·ª≠i m·ªôt c√¢u h·ªèi ng·∫´u nhi√™n trong k√™nh hi·ªán t·∫°i')
    .addRoleOption(option => option.setName('ping-role').setDescription('ch·ªçn vai tr√≤ c·∫ßn ping')),
    async execute(interaction) {

        // Ki·ªÉm tra tr·∫°ng th√°i c·ªßa l·ªánh
        const commandStatus = await CommandStatus.findOne({ command: '/random_question' });

        // N·∫øu l·ªánh ƒëang t·∫Øt, g·ª≠i th√¥ng b√°o v√† kh√¥ng th·ª±c hi·ªán l·ªánh
        if (commandStatus && commandStatus.status === 'off') {
            return interaction.reply('L·ªánh n√†y ƒë√£ b·ªã t·∫Øt, vui l√≤ng th·ª≠ l·∫°i sau.');
        }

        const removeSetting = interaction.options.getBoolean("remove");

        const QBD = config.specialUsers.includes(interaction.user.id);
        
        // N·∫øu kh√¥ng ph·∫£i ng∆∞·ªùi d√πng ƒë·∫∑c bi·ªát th√¨ ki·ªÉm tra quy·ªÅn admin
        if (!QBD) {
            const hasPermission = await checkAdministrator(interaction);
            if (!hasPermission) return;
        }
        
        const pingrole = interaction.options.getRole('ping-role') || `G·ª≠i l·ªùi ch√∫c t·ªõi mn nha`;

        await interaction.deferReply();
        await interaction.deleteReply()

        const msg = await interaction.channel.send({ content: `${pingrole}`, embeds: [randomquestionembed] })
        msg.react('‚úÖ')
        msg.react('‚ùå')
    }
}