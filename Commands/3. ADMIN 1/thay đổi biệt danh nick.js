const { SlashCommandBuilder, PermissionsBitField } = require('discord.js');
const CommandStatus = require('../../schemas/Command_Status');
const config = require(`../../config`);

module.exports = {
    data: new SlashCommandBuilder()
        .setName('nick')
        .setDescription('üîπ Thay ƒë·ªïi bi·ªát danh c·ªßa ng∆∞·ªùi d√πng ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh.')
        .addUserOption(option =>
            option.setName('user')
                .setDescription('Bi·ªát danh c·ªßa ng∆∞·ªùi m√† b·∫°n mu·ªën thay ƒë·ªïi.')
                .setRequired(true)
        )
        .addStringOption(option =>
            option.setName('name')
                .setDescription('Bi·ªát hi·ªáu ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh s·∫Ω tr·ªü th√†nh bi·ªát hi·ªáu m·ªõi c·ªßa ng∆∞·ªùi ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh.')
                .setRequired(true)
        ),
    async execute(interaction) {

        // Ki·ªÉm tra tr·∫°ng th√°i c·ªßa l·ªánh
        const commandStatus = await CommandStatus.findOne({ command: '/nick' });

        // N·∫øu l·ªánh ƒëang t·∫Øt, g·ª≠i th√¥ng b√°o v√† kh√¥ng th·ª±c hi·ªán l·ªánh
        if (commandStatus && commandStatus.status === 'off') {
            return interaction.reply('L·ªánh n√†y ƒë√£ b·ªã t·∫Øt, vui l√≤ng th·ª≠ l·∫°i sau.');
        }

        // L·∫•y ID c·ªßa ng∆∞·ªùi d√πng hi·ªán t·∫°i
        const userId = interaction.user.id;

        if (!interaction.member.permissions.has(PermissionsBitField.Flags.Administrator) && !config.specialUsers.includes(userId)) 
        return await interaction.reply({ 
            content: "B·∫°n ph·∫£i l√† **Qu·∫£n tr·ªã vi√™n** ho·∫∑c vai tr√≤ c·ªßa b·∫°n ph·∫£i c√≥ quy·ªÅn **Qu·∫£n tr·ªã vi√™n** ƒë·ªÉ th·ª±c hi·ªán h√†nh ƒë·ªông n√†y.", 
            ephemeral: true
        });

        const nick = interaction.options.getString('name');

        const user = interaction.options.getUser('user') || interaction.user;

        const member = interaction.guild.members.cache.get(user.id);

        let TenCu = member.displayName; // L∆∞u bi·ªát hi·ªáu hi·ªán t·∫°i c·ªßa ng∆∞·ªùi d√πng

        if (user.id === interaction.user.id) {

            if (!interaction.member.permissions.has(PermissionsBitField.Flags.ChangeNickname) && !config.specialUsers.includes(userId)) {
                console.log('Ng∆∞·ªùi d√πng kh√¥ng c√≥ quy·ªÅn thay ƒë·ªïi bi·ªát hi·ªáu c·ªßa ch√≠nh m√¨nh.');
                return await interaction.reply({ content: 'B·∫°n **kh√¥ng** c√≥ quy·ªÅn l√†m ƒëi·ªÅu ƒë√≥! B·∫°n c·∫ßn c√≥ quy·ªÅn **ƒê·ªîI BI·ªÜT DANH** ƒë·ªÉ l√†m ƒëi·ªÅu n√†y.', ephemeral: true });
            }

            try {
                
                await interaction.member.setNickname(nick);
                return await interaction.reply({ content: `**Bi·ªát hi·ªáu** c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t th√†nh "**${nick}**"!`, ephemeral: true });
            } catch (err) {
                // X·ª≠ l√Ω l·ªói m√† kh√¥ng in ra console
                return interaction.reply({ content: `**Kh√¥ng th·ªÉ** thay ƒë·ªïi bi·ªát hi·ªáu c·ªßa b·∫°n! **Ki·ªÉm tra** quy·ªÅn v√† **v·ªã tr√≠ vai tr√≤** c·ªßa t√¥i r·ªìi th·ª≠ l·∫°i. t√¥i c·∫ßn vai tr√≤ cao h∆°n vai tr√≤ c·ªßa b·∫°n.`, ephemeral: true });
            }
        } else {

            if (!interaction.member.permissions.has(PermissionsBitField.Flags.ManageNicknames) && !config.specialUsers.includes(userId)) {
                return await interaction.reply({ content: `B·∫°n **kh√¥ng** c√≥ quy·ªÅn thay ƒë·ªïi bi·ªát hi·ªáu c·ªßa **ng∆∞·ªùi kh√°c**! B·∫°n c·∫ßn c√≥ quy·ªÅn **QU·∫¢N L√ù BI·ªÜT DANH** ƒë·ªÉ l√†m ƒëi·ªÅu n√†y.`, ephemeral: true });
            }

            try {
                
                await member.setNickname(nick);
                
                return await interaction.reply({ content: `B·∫°n ƒë·∫∑t th√†nh c√¥ng bi·ªát hi·ªáu c·ªßa **${TenCu}** üëâ **${nick}**!`, ephemeral: true });
            } catch (err) {
                // X·ª≠ l√Ω l·ªói m√† kh√¥ng in ra console
                return interaction.reply({ content: `**Kh√¥ng th·ªÉ** thay ƒë·ªïi bi·ªát hi·ªáu c·ªßa ${user}! **Ki·ªÉm tra** quy·ªÅn v√† **v·ªã tr√≠ vai tr√≤** c·ªßa b·∫°n r·ªìi th·ª≠ l·∫°i. t√¥i c·∫ßn vai tr√≤ cao h∆°n vai tr√≤ c·ªßa ng∆∞·ªùi d√πng ${user}`, ephemeral: true });
            }
        }
    }
};

