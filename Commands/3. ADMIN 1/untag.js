const { SlashCommandBuilder } = require('discord.js');
const unpingSchemas = require(`../../schemas/unpingSchema`);
const { checkAdministrator } = require(`../../permissionCheck`)
const CommandStatus = require('../../schemas/Command_Status');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('untag')
        .setDescription('üîπ Thi·∫øt l·∫≠p ho·∫∑c x√≥a thi·∫øt l·∫≠p c·∫•m tag ng∆∞·ªùi d√πng.')
        .addSubcommand(subcommand =>
            subcommand
                .setName('setup')
                .setDescription('üîπ Thi·∫øt l·∫≠p ng∆∞·ªùi d√πng kh√¥ng b·ªã tag.')
                .addUserOption(option => 
                    option.setName('user')
                          .setDescription('Ch·ªçn ng∆∞·ªùi d√πng c·∫ßn thi·∫øt l·∫≠p.')
                          .setRequired(true))
        )
        .addSubcommand(subcommand =>
            subcommand
                .setName('remove-setup')
                .setDescription('üîπ X√≥a thi·∫øt l·∫≠p ng∆∞·ªùi d√πng kh√¥ng b·ªã tag.')
                .addUserOption(option => 
                    option.setName('user')
                          .setDescription('Ch·ªçn ng∆∞·ªùi d√πng c·∫ßn x√≥a thi·∫øt l·∫≠p.')
                          .setRequired(true))
        ),

    async execute(interaction) {

        // Ki·ªÉm tra tr·∫°ng th√°i c·ªßa l·ªánh
        const commandStatus = await CommandStatus.findOne({ command: '/untag' });

        // N·∫øu l·ªánh ƒëang t·∫Øt, g·ª≠i th√¥ng b√°o v√† kh√¥ng th·ª±c hi·ªán l·ªánh
        if (commandStatus && commandStatus.status === 'off') {
            return interaction.reply('L·ªánh n√†y ƒë√£ b·ªã t·∫Øt, vui l√≤ng th·ª≠ l·∫°i sau.');
        }

        const hasPermission = await checkAdministrator(interaction);
        if (!hasPermission) return;

        const subcommand = interaction.options.getSubcommand();
        const user = interaction.options.getUser('user');
        const guildId = interaction.guild.id;

        if (subcommand === 'setup') {

            await unpingSchemas.findOneAndUpdate(
                { Guild: guildId, User: user.id },
                { $set: { Guild: guildId, User: user.id } },
                { upsert: true, new: true }
            );

            await interaction.reply(`ƒê√£ thi·∫øt l·∫≠p ng∆∞·ªùi d√πng ${user.displayName} trong m√°y ch·ªß n√†y kh√¥ng b·ªã ping.`);
        } else if (subcommand === 'remove-setup') {

            await unpingSchemas.findOneAndDelete({ Guild: guildId, User: user.id });

            await interaction.reply(`ƒê√£ x√≥a thi·∫øt l·∫≠p ng∆∞·ªùi d√πng ${user.displayName} trong m√°y ch·ªß n√†y.`);
        }
    }
};
